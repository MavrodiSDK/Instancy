namespace O {
	namespace BaseNetworkable {
		constexpr auto JustCreatedk__BackingField = 0x18;
		constexpr auto entityDestroy = 0x20;
		constexpr auto postNetworkUpdateComponents = 0x28;
		constexpr auto parentEntity = 0x30;
		constexpr auto children = 0x40;
		constexpr auto prefabID = 0x48;
		constexpr auto globalBroadcast = 0x4c;
		constexpr auto net = 0x50;
		constexpr auto IsDestroyedk__BackingField = 0x58;
		constexpr auto _prefabName = 0x60;
		constexpr auto _prefabNameWithoutExtension = 0x68;

		constexpr auto get_JustCreated = 0x2f2800;
		constexpr auto set_JustCreated = 0x2f29f0;
		constexpr auto ClientSpawn = 0x2f0f60;
		constexpr auto ClientOnEnable = 0x2f0ee0;
		constexpr auto ClientInit = 0x2f0cf0;
		constexpr auto OnNetworkUpdate = 0x2f22d0;
		constexpr auto PreNetworkUpdate = 0x2e7760;
		constexpr auto PostNetworkUpdate = 0x2e7760;
		constexpr auto ShouldDestroyWithGroup = 0x2e9440;
		constexpr auto ShouldDestroyImmediately = 0x2e6930;
		constexpr auto NetworkDestroy = 0x2f1e60;
		constexpr auto DoClientDestroy = 0x2f1330;
		constexpr auto DoNetworkDestroy = 0x2e7760;
		constexpr auto BroadcastOnPostNetworkUpdate = 0x2f0ad0;
		constexpr auto PostProcess = 0x2f2450;
		constexpr auto GetParentEntity = 0x2f1790;
		constexpr auto HasParent = 0x2f17a0;
		constexpr auto AddChild = 0x2f0a40;
		constexpr auto OnChildAdded = 0x2e7760;
		constexpr auto RemoveChild = 0x2f24d0;
		constexpr auto OnChildRemoved = 0x2e7760;
		constexpr auto get_gameManager = 0x2f2920;
		constexpr auto get_prefabAttribute = 0x2f2980;
		constexpr auto get_IsDestroyed = 0x2f27f0;
		constexpr auto set_IsDestroyed = 0x2f29e0;
		constexpr auto get_PrefabName = 0x2f2810;
		constexpr auto get_ShortPrefabName = 0x2f2890;
		constexpr auto GetNetworkPosition = 0x2f1700;
		constexpr auto GetNetworkRotation = 0x2f1750;
		constexpr auto InvokeString = 0x2f17b0;
		constexpr auto LookupPrefab = 0x2f1dc0;
		constexpr auto EqualNetID = 0x2f1640;
		constexpr auto ResetState = 0x2f2540;
		constexpr auto InitShared = 0x2e7760;
		constexpr auto PreInitShared = 0x2e7760;
		constexpr auto PostInitShared = 0x2e7760;
		constexpr auto DestroyShared = 0x2e7760;
		constexpr auto OnNetworkGroupEnter = 0x2e7760;
		constexpr auto OnNetworkGroupLeave = 0x2e7760;
		constexpr auto OnNetworkGroupChange = 0x2f2190;
		constexpr auto OnNetworkSubscribersEnter = 0x2e7760;
		constexpr auto OnNetworkSubscribersLeave = 0x2e7760;
		constexpr auto EntityDestroy = 0x2f1550;
		constexpr auto DoEntityDestroy = 0x2f13f0;
		constexpr auto SpawnShared = 0x2f2590;
		constexpr auto Load = 0x2f1a00;
		constexpr auto get_isServer = 0x2e6930;
		constexpr auto get_isClient = 0x2e9440;
		constexpr auto OnRpcMessage = 0x2e6930;
		constexpr auto ctor = 0x2f2750;
		constexpr auto cctor = 0x2f26a0;
	};

	namespace BasePlayer {
		constexpr auto __menuOption_Climb = 0x220;
		constexpr auto __menuOption_Drink = 0x278;
		constexpr auto __menuOption_InviteToTeam = 0x2d0;
		constexpr auto __menuOption_Menu_AssistPlayer = 0x328;
		constexpr auto __menuOption_Menu_LootPlayer = 0x380;
		constexpr auto __menuOption_Promote = 0x3d8;
		constexpr auto __menuOption_SaltWater = 0x430;
		constexpr auto currentViewMode = 0x488;
		constexpr auto selectedViewMode = 0x48c;
		constexpr auto lastRevivePoint = 0x490;
		constexpr auto lastReviveDirection = 0x49c;
		constexpr auto playerModel = 0x4a8;
		constexpr auto Frozen = 0x4b0;
		constexpr auto voiceRecorder = 0x4b8;
		constexpr auto voiceSpeaker = 0x4c0;
		constexpr auto input = 0x4c8;
		constexpr auto movement = 0x4d0;
		constexpr auto collision = 0x4d8;
		constexpr auto _lookingAt = 0x4e0;
		constexpr auto _lookingAtEntity = 0x4e8;
		constexpr auto _lookingAtCollider = 0x4f0;
		constexpr auto lookingAtPointk__BackingField = 0x4f8;
		constexpr auto wakeTime = 0x504;
		constexpr auto needsClothesRebuild = 0x508;
		constexpr auto wasSleeping = 0x509;
		constexpr auto wokeUpBefore = 0x50a;
		constexpr auto wasDead = 0x50b;
		constexpr auto lastClothesHash = 0x50c;
		constexpr auto visiblePlayerList = 0x8;
		constexpr auto craftMode = 0x10;
		constexpr auto timeSinceUpdatedLookingAt = 0x510;
		constexpr auto nextTopologyTestTime = 0x514;
		constexpr auto usePressTime = 0x518;
		constexpr auto useHeldTime = 0x51c;
		constexpr auto lookingAtTest = 0x520;
		constexpr auto lastDeathTimeClient = 0x14;
		constexpr auto cachedWaterDrinkingPoint = 0x528;
		constexpr auto currentTeam = 0x538;
		constexpr auto MaxTeamSizeToast = 0x18;
		constexpr auto clientTeam = 0x540;
		constexpr auto lastReceivedTeamTime = 0x548;
		constexpr auto lastPresenceTeamId = 0x550;
		constexpr auto lastPresenceTeamSize = 0x558;
		constexpr auto playerGroupKey = 0x560;
		constexpr auto playerGroupSizeKey = 0x568;
		constexpr auto clActiveItem = 0x570;
		constexpr auto ClientCurrentMapNote = 0x578;
		constexpr auto ClientCurrentDeathNote = 0x580;
		constexpr auto modelState = 0x588;
		constexpr auto mounted = 0x590;
		constexpr auto nextSeatSwapTime = 0x5a0;
		constexpr auto cachedBuildingPrivilegeTime = 0x5a4;
		constexpr auto cachedBuildingPrivilege = 0x5a8;
		constexpr auto maxProjectileID = 0x5b0;
		constexpr auto lastUpdateTime = 0x5b4;
		constexpr auto cachedThreatLevel = 0x5b8;
		constexpr auto serverTickRate = 0x5bc;
		constexpr auto clientTickRate = 0x5c0;
		constexpr auto serverTickInterval = 0x5c4;
		constexpr auto clientTickInterval = 0x5c8;
		constexpr auto lastSentTickTime = 0x5cc;
		constexpr auto lastSentTick = 0x5d0;
		constexpr auto nextVisThink = 0x5d8;
		constexpr auto lastTimeSeen = 0x5dc;
		constexpr auto debugPrevVisible = 0x5e0;
		constexpr auto fallDamageEffect = 0x5e8;
		constexpr auto drownEffect = 0x5f0;
		constexpr auto playerFlags = 0x5f8;
		constexpr auto eyes = 0x600;
		constexpr auto inventory = 0x608;
		constexpr auto blueprints = 0x610;
		constexpr auto metabolism = 0x618;
		constexpr auto modifiers = 0x620;
		constexpr auto playerCollider = 0x628;
		constexpr auto Belt = 0x630;
		constexpr auto playerRigidbody = 0x638;
		constexpr auto userID = 0x640;
		constexpr auto UserIDString = 0x648;
		constexpr auto gamemodeteam = 0x650;
		constexpr auto _displayName = 0x658;
		constexpr auto _lastSetName = 0x660;
		constexpr auto playerColliderStanding = 0x668;
		constexpr auto playerColliderDucked = 0x67c;
		constexpr auto playerColliderLyingDown = 0x690;
		constexpr auto cachedProtection = 0x6a8;
		constexpr auto oldCameraFix = 0x20;
		constexpr auto lastHeadshotSoundTime = 0x6b0;
		constexpr auto nextColliderRefreshTime = 0x6b4;
		constexpr auto clothingBlocksAiming = 0x6b8;
		constexpr auto clothingMoveSpeedReduction = 0x6bc;
		constexpr auto clothingWaterSpeedBonus = 0x6c0;
		constexpr auto clothingAccuracyBonus = 0x6c4;
		constexpr auto equippingBlocked = 0x6c8;
		constexpr auto eggVision = 0x6cc;
		constexpr auto activeTelephone = 0x6d0;

		constexpr auto GetMenuOptions = 0x300000;
		constexpr auto get_HasMenuOptions = 0x313d10;
		constexpr auto OnRpcMessage = 0x306050;
		constexpr auto HandleCCTVRenderRequest = 0x3016a0;
		constexpr auto SetPlayerModelVisible = 0x30fac0;
		constexpr auto CanBeLooted = 0x2f7c00;
		constexpr auto Menu_LootPlayer = 0x305710;
		constexpr auto Menu_LootPlayer_ShowIf = 0x3056f0;
		constexpr auto RPC_OpenLootPanel = 0x30d6d0;
		constexpr auto PlayOpenSound = 0x30c250;
		constexpr auto InFirstPersonMode = 0x302320;
		constexpr auto UpdateViewMode = 0x3126e0;
		constexpr auto get_idealViewMode = 0x3142a0;
		constexpr auto get_shouldDrawBody = 0x314660;
		constexpr auto OnViewModeChanged = 0x30bdf0;
		constexpr auto ModifyCamera = 0x305780;
		constexpr auto Menu_AssistPlayer = 0x3056b0;
		constexpr auto Menu_AssistPlayer_TimeStart = 0x305670;
		constexpr auto Menu_AssistPlayer_ShowIf = 0x305400;
		constexpr auto get_lookingAt = 0x3145d0;
		constexpr auto get_lookingAtEntity = 0x314520;
		constexpr auto get_lookingAtCollider = 0x314490;
		constexpr auto get_lookingAtPoint = 0x3145b0;
		constexpr auto set_lookingAtPoint = 0x314870;
		constexpr auto GetExtrapolationTime = 0x2ff5a0;
		constexpr auto GetLocalVelocityClient = 0x2ffe50;
		constexpr auto ClientInit = 0x2f9110;
		constexpr auto CreatePlayerModel = 0x2fce80;
		constexpr auto CreatePlayerCollision = 0x2fcc90;
		constexpr auto CreatePlayerMovement = 0x2fd390;
		constexpr auto InitLocalPlayer = 0x302350;
		constexpr auto InitRemotePlayer = 0x302630;
		constexpr auto HasLocalControls = 0x301b40;
		constexpr auto SetNetworkPosition = 0x30f940;
		constexpr auto SetNetworkRotation = 0x30f9f0;
		constexpr auto DoClientDestroy = 0x2fd7e0;
		constexpr auto PostNetworkUpdate = 0x30ca20;
		constexpr auto OnFirstWakeUp = 0x305c30;
		constexpr auto get_TimeAwake = 0x3140e0;
		constexpr auto CL_ClothingChanged = 0x2f7620;
		constexpr auto ForceRebuild = 0x2feb00;
		constexpr auto RebuildWorldModel = 0x30db70;
		constexpr auto SetDefaultFootstepEffects = 0x30f440;
		constexpr auto OnSignal = 0x30b9d0;
		constexpr auto FindBone = 0x2fe1a0;
		constexpr auto GetBones = 0x2feb10;
		constexpr auto ShouldLerp = 0x30ff00;
		constexpr auto get_VisiblePlayerList = 0x314140;
		constexpr auto ClearVisibility = 0x2f8c60;
		constexpr auto RegisterForVisibility = 0x30e2c0;
		constexpr auto UnregisterFromVisibility = 0x3104b0;
		constexpr auto FindByID_Clientside = 0x2fe2a0;
		constexpr auto Find_Clientside = 0x2fe470;
		constexpr auto GetRandomFloatBasedOnUserID = 0x301410;
		constexpr auto DisplayHealthInfo = 0x2e6930;
		constexpr auto ShouldDestroyWithGroup = 0x30fed0;
		constexpr auto SetInheritedVelocity = 0x30f5c0;
		constexpr auto GetPerformanceReport = 0x301300;
		constexpr auto OnBecameRagdoll = 0x305b30;
		constexpr auto OnVoiceData = 0x30c220;
		constexpr auto RecieveAchievement = 0x30de70;
		constexpr auto CraftMode = 0x2fca20;
		constexpr auto ClientOnEnable = 0x2f9c20;
		constexpr auto UpdateClothesIfNeeded = 0x310600;
		constexpr auto MakeVisible = 0x305120;
		constexpr auto ClientUpdate_Sleeping = 0x2facb0;
		constexpr auto ClientUpdate = 0x2fb040;
		constexpr auto RebuildClothingItems = 0x30d950;
		constexpr auto UpdateClothingItems = 0x310ad0;
		constexpr auto UpdateHolsterOffsets = 0x3111f0;
		constexpr auto PostLateClientCycle = 0x30c980;
		constexpr auto IsLocalPlayer = 0x303c20;
		constexpr auto ClientUpdateLocalPlayer = 0x2f9d80;
		constexpr auto UpdateTopologyStats = 0x312580;
		constexpr auto ClientTick = 0x2f9cd0;
		constexpr auto DoMovement = 0x2fdad0;
		constexpr auto MountableOverrideViewAngles = 0x305870;
		constexpr auto BlockSprint = 0x2f6d20;
		constexpr auto BlockJump = 0x2f6c80;
		constexpr auto ClientInput = 0x2f9600;
		constexpr auto UseAction = 0x312aa0;
		constexpr auto GetInteractionEntity = 0x2ffb30;
		constexpr auto QuickUse = 0x30d530;
		constexpr auto LongUse = 0x305060;
		constexpr auto UseStop = 0x312d70;
		constexpr auto UpdateLookingAt = 0x311380;
		constexpr auto ResetLookingAt = 0x30e4e0;
		constexpr auto SetLookingAt = 0x30f750;
		constexpr auto CheckLookingAtVisible = 0x2f84b0;
		constexpr auto FindVehicleParentFor = 0x2fe330;
		constexpr auto OnDied = 0x305b60;
		constexpr auto OnRespawnInformation = 0x305f80;
		constexpr auto OnLand = 0x305d70;
		constexpr auto StartLoading = 0x310170;
		constexpr auto FinishLoading = 0x2fe700;
		constexpr auto FinishedLoadingRoutine = 0x2fe7d0;
		constexpr auto DirectionalDamage = 0x2fd670;
		constexpr auto UnlockedBlueprint = 0x310440;
		constexpr auto CheckForRespawnInfo = 0x2f8440;
		constexpr auto UpdateRichPresenceState = 0x3122e0;
		constexpr auto HandleCompanionPairingResult = 0x301aa0;
		constexpr auto UpdateWaterDrinkingPoint = 0x312820;
		constexpr auto GetWaterDrinkingPoint = 0x301680;
		constexpr auto Drink = 0x2fdd60;
		constexpr auto Drink_ShowIf = 0x2fdb90;
		constexpr auto SaltWater = 0x2e7760;
		constexpr auto SaltWater_ShowIf = 0x30e660;
		constexpr auto Climb = 0x2fc3a0;
		constexpr auto Climb_ShowIf = 0x2fc110;
		constexpr auto HasPlayerFlag = 0x301bb0;
		constexpr auto get_IsReceivingSnapshot = 0x3140d0;
		constexpr auto get_IsAdmin = 0x314070;
		constexpr auto get_IsDeveloper = 0x3140a0;
		constexpr auto get_IsAiming = 0x314080;
		constexpr auto get_IsFlying = 0x3140b0;
		constexpr auto get_IsConnected = 0x314090;
		constexpr auto get_clientTeamLifetime = 0x3141b0;
		constexpr auto CLIENT_ReceiveTeamInfo = 0x2f73a0;
		constexpr auto UpdateSteamGroup = 0x312330;
		constexpr auto ClearSteamGroup = 0x2f8b40;
		constexpr auto CLIENT_ClearTeam = 0x2f6dc0;
		constexpr auto CLIENT_PendingInvite = 0x2f6fa0;
		constexpr auto InviteToTeam = 0x3026a0;
		constexpr auto Promote = 0x30d3c0;
		constexpr auto Menu_Promote_Start = 0x2e7760;
		constexpr auto Promote_ShowIf = 0x30d010;
		constexpr auto LocalPlayerIsLeader = 0x304b70;
		constexpr auto Invite_ShowIf = 0x302bc0;
		constexpr auto GetHeldEntity = 0x2ff690;
		constexpr auto GetHeldItem = 0x2ff8c0;
		constexpr auto GetHeldItemID = 0x2ff870;
		constexpr auto HeldEntityViewAngles = 0x302100;
		constexpr auto HeldEntityFrame = 0x301c90;
		constexpr auto HeldEntityInput = 0x301e60;
		constexpr auto HeldItemUse = 0x302220;
		constexpr auto HeldEntityStart = 0x302030;
		constexpr auto HeldEntityEnd = 0x301bc0;
		constexpr auto IsHostileItem = 0x303940;
		constexpr auto IsItemHoldRestricted = 0x303a90;
		constexpr auto MapInfoOnEnable = 0x3051d0;
		constexpr auto Client_ReceiveMarkers = 0x2fbca0;
		constexpr auto Client_UpdateDeathMarker = 0x2fbfe0;
		constexpr auto Client_AddNewDeathMarker = 0x2fbb60;
		constexpr auto AddPointOfInterest = 0x2f5fb0;
		constexpr auto ClearAllPointsOfInterest = 0x2f8a10;
		constexpr auto ClearAllMapMarkers = 0x2f88b0;
		constexpr auto OnModelState = 0x305ec0;
		constexpr auto OnModelStateChanged = 0x305e20;
		constexpr auto get_isMounted = 0x3143c0;
		constexpr auto get_isMountingHidingWeapon = 0x3143e0;
		constexpr auto GetMounted = 0x301140;
		constexpr auto GetMountedVehicle = 0x301040;
		constexpr auto MarkSwapSeat = 0x305220;
		constexpr auto SwapSeatCooldown = 0x3101f0;
		constexpr auto ClientUpdateMounted = 0x2faa30;
		constexpr auto IsSleeping = 0x303e90;
		constexpr auto IsSpectating = 0x303ea0;
		constexpr auto IsRelaxed = 0x303db0;
		constexpr auto IsServerFalling = 0x303e80;
		constexpr auto GetBuildingPrivilege = 0x2fef20;
		constexpr auto CanBuild = 0x2f7ed0;
		constexpr auto IsBuildingBlocked = 0x303610;
		constexpr auto IsBuildingAuthed = 0x3031d0;
		constexpr auto CanPlaceBuildingPrivilege = 0x2f7fc0;
		constexpr auto NewProjectileID = 0x305900;
		constexpr auto NewProjectileSeed = 0x305910;
		constexpr auto SendProjectileAttack = 0x30f180;
		constexpr auto SendProjectileRicochet = 0x30f1d0;
		constexpr auto SendProjectileUpdate = 0x30f220;
		constexpr auto Load = 0x304790;
		constexpr auto GetThreatLevel = 0x301660;
		constexpr auto EnsureUpdated = 0x2fdf10;
		constexpr auto SetHostileLength = 0x30f510;
		constexpr auto SetWeaponDrawnDuration = 0x30fe30;
		constexpr auto ModifyInputState = 0x2e7760;
		constexpr auto ForcePositionToParentOffset = 0x2fe840;
		constexpr auto UpdateClientTickRate = 0x3105a0;
		constexpr auto ForcePositionTo = 0x2fe970;
		constexpr auto SendVoiceData = 0x30f270;
		constexpr auto SendClientTick = 0x30eac0;
		constexpr auto NotifyUnderwearChange = 0x305920;
		constexpr auto UpdatePlayerVisibilities = 0x311fe0;
		constexpr auto TimeSinceSeen = 0x310220;
		constexpr auto SetNextVisThink = 0x30fa90;
		constexpr auto WantsVisUpdate = 0x3138b0;
		constexpr auto IsAimingAt = 0x302e00;
		constexpr auto UpdateCullingSpheres = 0x310f30;
		constexpr auto VisUpdateUsingCulling = 0x312ef0;
		constexpr auto VisUpdateUsingRays = 0x313000;
		constexpr auto LogDebugCull = 0x304d20;
		constexpr auto OnVisibilityChanged = 0x30bf20;
		constexpr auto VisUpdate = 0x313420;
		constexpr auto VisPlayerArmed = 0x312e30;
		constexpr auto AnyPartVisible = 0x2f6090;
		constexpr auto CalcVisUpdateRate = 0x2f7870;
		constexpr auto PointSeePoint = 0x30c6b0;
		constexpr auto IsWounded = 0x304180;
		constexpr auto ToPlayer = 0x310240;
		constexpr auto get_Connection = 0x313ca0;
		constexpr auto get_displayName = 0x314200;
		constexpr auto set_displayName = 0x314780;
		constexpr auto IsGod = 0x303870;
		constexpr auto GetNetworkRotation = 0x3011d0;
		constexpr auto CanInteract = 0x2f7f70;
		constexpr auto StartHealth = 0x310150;
		constexpr auto StartMaxHealth = 0x2e5120;
		constexpr auto MaxHealth = 0x305260;
		constexpr auto MaxVelocity = 0x305310;
		constexpr auto GetInheritedProjectileVelocity = 0x2ff9b0;
		constexpr auto GetInheritedThrowVelocity = 0x2ffa70;
		constexpr auto GetInheritedDropVelocity = 0x2ff8f0;
		constexpr auto PreInitShared = 0x30cc90;
		constexpr auto DestroyShared = 0x2fd5f0;
		constexpr auto InSafeZone = 0x302340;
		constexpr auto LateClientCycle = 0x304190;
		constexpr auto ClientCycle = 0x2f8e20;
		constexpr auto GetBounds = 0x2feba0;
		constexpr auto GetCenter = 0x2fefd0;
		constexpr auto GetOffset = 0x3012b0;
		constexpr auto GetSize = 0x301510;
		constexpr auto GetHeight = 0x2ff670;
		constexpr auto GetRadius = 0x301400;
		constexpr auto GetJumpHeight = 0x2ffe40;
		constexpr auto TriggerPoint = 0x3102c0;
		constexpr auto MaxDeployDistance = 0x305250;
		constexpr auto ClientUpdatePersistantData = 0x2fac80;
		constexpr auto GetMinSpeed = 0x301020;
		constexpr auto GetMaxSpeed = 0x2fffe0;
		constexpr auto GetSpeed = 0x301570;
		constexpr auto OnAttacked = 0x305960;
		constexpr auto EnablePlayerCollider = 0x2fdeb0;
		constexpr auto DisablePlayerCollider = 0x2fd780;
		constexpr auto RefreshColliderSize = 0x30df90;
		constexpr auto SetPlayerRigidbodyState = 0x30fe10;
		constexpr auto AddPlayerRigidbody = 0x2f5e30;
		constexpr auto RemovePlayerRigidbody = 0x30e3b0;
		constexpr auto IsEnsnared = 0x303780;
		constexpr auto IsAttacking = 0x302fd0;
		constexpr auto CanAttack = 0x2f79b0;
		constexpr auto OnLadder = 0x305ce0;
		constexpr auto IsSwimming = 0x304130;
		constexpr auto IsHeadUnderwater = 0x3038f0;
		constexpr auto IsOnGround = 0x303d00;
		constexpr auto IsRunning = 0x303dc0;
		constexpr auto IsDucked = 0x3036c0;
		constexpr auto ShowToast = 0x30ff60;
		constexpr auto ChatMessage = 0x2f8250;
		constexpr auto ConsoleMessage = 0x2fc970;
		constexpr auto PenetrationResistance = 0x2e5120;
		constexpr auto ScaleDamage = 0x30e830;
		constexpr auto UpdateMoveSpeedFromClothing = 0x311c30;
		constexpr auto UpdateProtectionFromClothing = 0x3121c0;
		constexpr auto Categorize = 0x2f8220;
		constexpr auto ToString = 0x310250;
		constexpr auto GetDebugStatus = 0x2ff260;
		constexpr auto GetItem = 0x2ffd90;
		constexpr auto get_Traits = 0x314120;
		constexpr auto WaterFactor = 0x3138d0;
		constexpr auto ShouldInheritNetworkGroup = 0x303ea0;
		constexpr auto AnyPlayersVisibleToEntity = 0x2f66d0;
		constexpr auto IsStandingOnEntity = 0x303eb0;
		constexpr auto SetActiveTelephone = 0x30f430;
		constexpr auto get_HasActiveTelephone = 0x313cb0;
		constexpr auto ctor = 0x313b50;
		constexpr auto cctor = 0x313a50;
	};

	namespace BaseMovement {
		constexpr auto adminCheat = 0x18;
		constexpr auto adminSpeed = 0x1c;
		constexpr auto Ownerk__BackingField = 0x20;
		constexpr auto InheritedVelocityk__BackingField = 0x28;
		constexpr auto TargetMovementk__BackingField = 0x34;
		constexpr auto Runningk__BackingField = 0x40;
		constexpr auto Duckingk__BackingField = 0x44;
		constexpr auto Groundedk__BackingField = 0x48;

		constexpr auto get_Owner = 0x2f09b0;
		constexpr auto set_Owner = 0x2f0890;
		constexpr auto get_InheritedVelocity = 0x2f0960;
		constexpr auto set_InheritedVelocity = 0x2f0a10;
		constexpr auto get_TargetMovement = 0x2f09d0;
		constexpr auto set_TargetMovement = 0x2f0a30;
		constexpr auto get_Running = 0x2f09c0;
		constexpr auto set_Running = 0x2f0a20;
		constexpr auto get_Ducking = 0x2f0940;
		constexpr auto set_Ducking = 0x2f09f0;
		constexpr auto get_Grounded = 0x2f0950;
		constexpr auto set_Grounded = 0x2f0a00;
		constexpr auto get_IsRunning = 0x2f09a0;
		constexpr auto get_IsDucked = 0x2f0980;
		constexpr auto get_IsGrounded = 0x2f0990;
		constexpr auto CurrentVelocity = 0x2f05c0;
		constexpr auto CurrentMoveSpeed = 0x2eea80;
		constexpr auto GetCollider = 0x2e1bf0;
		constexpr auto Init = 0x2f0890;
		constexpr auto BlockJump = 0x2e7760;
		constexpr auto BlockSprint = 0x2e7760;
		constexpr auto ClientInput = 0x2e7760;
		constexpr auto DoFixedUpdate = 0x2e7760;
		constexpr auto FrameUpdate = 0x2f0740;
		constexpr auto TeleportTo = 0x2f08a0;
		constexpr auto Push = 0x2e7760;
		constexpr auto SetParent = 0x2e7760;
		constexpr auto FixedUpdate = 0x2f0630;
		constexpr auto PlayerAttemptedMount = 0x2e7760;
		constexpr auto PlayerCompletedMount = 0x2e7760;
		constexpr auto ctor = 0x2f0930;
	};

	namespace BaseProjectile {
		constexpr auto NoiseRadius = 0x260;
		constexpr auto damageScale = 0x264;
		constexpr auto distanceScale = 0x268;
		constexpr auto projectileVelocityScale = 0x26c;
		constexpr auto automatic = 0x270;
		constexpr auto usableByTurret = 0x271;
		constexpr auto turretDamageScale = 0x274;
		constexpr auto attackFX = 0x278;
		constexpr auto silencedAttack = 0x280;
		constexpr auto muzzleBrakeAttack = 0x288;
		constexpr auto MuzzlePoint = 0x290;
		constexpr auto reloadTime = 0x298;
		constexpr auto canUnloadAmmo = 0x29c;
		constexpr auto primaryMagazine = 0x2a0;
		constexpr auto fractionalReload = 0x2a8;
		constexpr auto reloadStartDuration = 0x2ac;
		constexpr auto reloadFractionDuration = 0x2b0;
		constexpr auto reloadEndDuration = 0x2b4;
		constexpr auto aimSway = 0x2b8;
		constexpr auto aimSwaySpeed = 0x2bc;
		constexpr auto recoil = 0x2c0;
		constexpr auto aimconeCurve = 0x2c8;
		constexpr auto aimCone = 0x2d0;
		constexpr auto hipAimCone = 0x2d4;
		constexpr auto aimconePenaltyPerShot = 0x2d8;
		constexpr auto aimConePenaltyMax = 0x2dc;
		constexpr auto aimconePenaltyRecoverTime = 0x2e0;
		constexpr auto aimconePenaltyRecoverDelay = 0x2e4;
		constexpr auto stancePenaltyScale = 0x2e8;
		constexpr auto hasADS = 0x2ec;
		constexpr auto noAimingWhileCycling = 0x2ed;
		constexpr auto manualCycle = 0x2ee;
		constexpr auto needsCycle = 0x2ef;
		constexpr auto isCycling = 0x2f0;
		constexpr auto aiming = 0x2f1;
		constexpr auto resetDuration = 0x2f4;
		constexpr auto numShotsFired = 0x2f8;
		constexpr auto nextReloadTime = 0x2fc;
		constexpr auto startReloadTime = 0x300;
		constexpr auto stancePenalty = 0x304;
		constexpr auto aimconePenalty = 0x308;
		constexpr auto isReloading = 0x30c;
		constexpr auto swaySampleTime = 0x310;
		constexpr auto lastShotTime = 0x314;
		constexpr auto reloadPressTime = 0x318;
		constexpr auto ammoTypePreReload = 0x320;
		constexpr auto fractionalReloadDesiredCount = 0x328;
		constexpr auto fractionalReloadNumAdded = 0x32c;
		constexpr auto triggerReady = 0x330;
		constexpr auto nextHeightCheckTime = 0x334;
		constexpr auto cachedUnderground = 0x338;
		constexpr auto createdProjectiles = 0x340;

		constexpr auto OnRpcMessage = 0x733ac0;
		constexpr auto GetInheritedVelocity = 0x7311a0;
		constexpr auto GetDamageScale = 0x731180;
		constexpr auto GetDistanceScale = 0x731190;
		constexpr auto GetProjectileVelocityScale = 0x2f3210;
		constexpr auto StartReloadCooldown = 0x735140;
		constexpr auto ResetReloadCooldown = 0x7345c0;
		constexpr auto HasReloadCooldown = 0x732090;
		constexpr auto GetReloadCooldown = 0x731990;
		constexpr auto GetReloadIdle = 0x731af0;
		constexpr auto OnDrawGizmos = 0x733300;
		constexpr auto GetRecoil = 0x731980;
		constexpr auto get_isSemiAuto = 0x7354a0;
		constexpr auto GetAimCone = 0x7308e0;
		constexpr auto ScaleRepeatDelay = 0x7345d0;
		constexpr auto GetProjectileModifier = 0x731340;
		constexpr auto DidAttackClientside = 0x72f0b0;
		constexpr auto GetItemOptions = 0x7311f0;
		constexpr auto EditViewAngles = 0x72fee0;
		constexpr auto OnFrame = 0x7336d0;
		constexpr auto ShotFired = 0x734900;
		constexpr auto SimulateAimcone = 0x734960;
		constexpr auto CanAttack = 0x72ebe0;
		constexpr auto CanAim = 0x72ebb0;
		constexpr auto OnInput = 0x7336e0;
		constexpr auto ReadyToAim = 0x734510;
		constexpr auto ReadyToFire = 0x734560;
		constexpr auto AmmoTypeClicked = 0x72ea90;
		constexpr auto AddAmmoOption = 0x72e8e0;
		constexpr auto GetReloadMenu = 0x731b70;
		constexpr auto PredictAmmoType = 0x7342e0;
		constexpr auto HasMoreThanOneAmmoType = 0x731de0;
		constexpr auto OnDeploy = 0x7332c0;
		constexpr auto DoReload = 0x72f970;
		constexpr auto InsertAmmoFraction = 0x7320c0;
		constexpr auto CancelFractionalReloading = 0x72ec00;
		constexpr auto ClientFinishFractionalReload = 0x72eca0;
		constexpr auto ClientSingleReload = 0x72ede0;
		constexpr auto DoAttack = 0x72f0c0;
		constexpr auto BeginCycle = 0x72eb20;
		constexpr auto LaunchProjectile = 0x7330d0;
		constexpr auto DryFire = 0x72fe30;
		constexpr auto GetReloadDuration = 0x731a10;
		constexpr auto GetAvailableAmmo = 0x730f70;
		constexpr auto IsSilenced = 0x732120;
		constexpr auto FiredUnderground = 0x730850;
		constexpr auto OnSignal = 0x733bb0;
		constexpr auto LaunchProjectileClientside = 0x732300;
		constexpr auto CreateProjectile = 0x72ef20;
		constexpr auto UpdateAmmoDisplay = 0x735190;
		constexpr auto get_UsingInfiniteAmmoCheat = 0x2e6930;
		constexpr auto Load = 0x733220;
		constexpr auto ctor = 0x735240;
	};

	namespace PlayerWalkMovement {
		constexpr auto zeroFrictionMaterial = 0x50;
		constexpr auto highFrictionMaterial = 0x58;
		constexpr auto capsuleHeight = 0x60;
		constexpr auto capsuleCenter = 0x64;
		constexpr auto capsuleHeightDucked = 0x68;
		constexpr auto capsuleCenterDucked = 0x6c;
		constexpr auto gravityTestRadius = 0x70;
		constexpr auto gravityMultiplier = 0x74;
		constexpr auto gravityMultiplierSwimming = 0x78;
		constexpr auto maxAngleWalking = 0x7c;
		constexpr auto maxAngleClimbing = 0x80;
		constexpr auto maxAngleSliding = 0x84;
		constexpr auto maxStepHeight = 0x88;
		constexpr auto body = 0x90;
		constexpr auto initialColDetectionMode = 0x98;
		constexpr auto capsule = 0xa0;
		constexpr auto ladder = 0xa8;
		constexpr auto maxVelocity = 0xb0;
		constexpr auto groundAngle = 0xb4;
		constexpr auto groundAngleNew = 0xb8;
		constexpr auto groundTime = 0xbc;
		constexpr auto jumpTime = 0xc0;
		constexpr auto landTime = 0xc4;
		constexpr auto previousPosition = 0xc8;
		constexpr auto previousVelocity = 0xd4;
		constexpr auto previousInheritedVelocity = 0xe0;
		constexpr auto groundNormal = 0xec;
		constexpr auto groundNormalNew = 0xf8;
		constexpr auto groundVelocity = 0x104;
		constexpr auto groundVelocityNew = 0x110;
		constexpr auto nextSprintTime = 0x11c;
		constexpr auto lastSprintTime = 0x120;
		constexpr auto sprintForced = 0x124;
		constexpr auto attemptedMountTime = 0x128;
		constexpr auto modify = 0x12c;
		constexpr auto grounded = 0x130;
		constexpr auto wasGrounded = 0x131;
		constexpr auto climbing = 0x132;
		constexpr auto wasClimbing = 0x133;
		constexpr auto sliding = 0x134;
		constexpr auto wasSliding = 0x135;
		constexpr auto swimming = 0x136;
		constexpr auto wasSwimming = 0x137;
		constexpr auto jumping = 0x138;
		constexpr auto wasJumping = 0x139;
		constexpr auto falling = 0x13a;
		constexpr auto wasFalling = 0x13b;
		constexpr auto flying = 0x13c;
		constexpr auto wasFlying = 0x13d;
		constexpr auto forcedDuckDelta = 0x140;

		constexpr auto Awake = 0x893d40;
		constexpr auto GetCollider = 0x3e9650;
		constexpr auto OnDisable = 0x898c70;
		constexpr auto Init = 0x896400;
		constexpr auto OnCollisionEnter = 0x898ab0;
		constexpr auto OnCollisionStay = 0x898b90;
		constexpr auto GroundCheck = 0x895c70;
		constexpr auto TeleportTo = 0x899320;
		constexpr auto UpdateCurrentLadder = 0x899650;
		constexpr auto ClientInput = 0x894020;
		constexpr auto Movement_Water = 0x897e80;
		constexpr auto Movement_Mounted = 0x896f70;
		constexpr auto Movement_Ladder = 0x8968f0;
		constexpr auto Movement_Noclip = 0x897060;
		constexpr auto Movement_Walking = 0x897620;
		constexpr auto GetHeldEntityMovementMultiplier = 0x895bc0;
		constexpr auto HandleGrounded = 0x8961d0;
		constexpr auto HandleRunning = 0x896340;
		constexpr auto HandleDucking = 0x895f40;
		constexpr auto GetForcedDuck = 0x895ae0;
		constexpr auto HandleJumping = 0x896220;
		constexpr auto CanJump = 0x893eb0;
		constexpr auto BlockJump = 0x893e20;
		constexpr auto BlockSprint = 0x893e60;
		constexpr auto SetKinematic = 0x8990f0;
		constexpr auto ApplyForce = 0x893d00;
		constexpr auto CanSprint = 0x893fb0;
		constexpr auto Jump = 0x8965d0;
		constexpr auto DoFixedUpdate = 0x8943d0;
		constexpr auto DoStepUp = 0x894c10;
		constexpr auto UpdateVelocity = 0x899b10;
		constexpr auto UpdateGravity = 0x8997d0;
		constexpr auto FrameUpdate = 0x895640;
		constexpr auto TransformState = 0x899440;
		constexpr auto SetParent = 0x899120;
		constexpr auto FallVelocity = 0x895590;
		constexpr auto CurrentVelocity = 0x894390;
		constexpr auto CurrentMoveSpeed = 0x894340;
		constexpr auto PlayerAttemptedMount = 0x899090;
		constexpr auto PlayerCompletedMount = 0x8990c0;
		constexpr auto ctor = 0x89a660;
	};

	namespace UnityEngine_GUI {
		constexpr auto s_BoxHash = 0x4;
		constexpr auto s_ButonHash = 0x8;
		constexpr auto s_RepeatButtonHash = 0xc;
		constexpr auto s_ToggleHash = 0x10;
		constexpr auto s_ButtonGridHash = 0x14;
		constexpr auto s_SliderHash = 0x18;
		constexpr auto s_BeginGroupHash = 0x1c;
		constexpr auto s_ScrollviewHash = 0x20;
		constexpr auto scrollTroughSidek__BackingField = 0x24;
		constexpr auto nextScrollStepTimek__BackingField = 0x28;
		constexpr auto s_Skin = 0x30;
		constexpr auto scrollViewStatesk__BackingField = 0x38;

		constexpr auto get_color = 0x18d24f0;
		constexpr auto set_color = 0x18d2a90;
		constexpr auto get_backgroundColor = 0x18d23a0;
		constexpr auto set_backgroundColor = 0x18d29a0;
		constexpr auto get_contentColor = 0x18d25b0;
		constexpr auto set_contentColor = 0x18d2b40;
		constexpr auto get_changed = 0x18d2480;
		constexpr auto set_changed = 0x18d2a10;
		constexpr auto get_enabled = 0x18d2630;
		constexpr auto set_enabled = 0x18d2bb0;
		constexpr auto get_usePageScrollbars = 0x18d2930;
		constexpr auto get_blendMaterial = 0x18d2420;
		constexpr auto get_blitMaterial = 0x18d2450;
		constexpr auto get_roundedRectMaterial = 0x18d2750;
		constexpr auto get_roundedRectWithColorPerBorderMaterial = 0x18d2780;
		constexpr auto GrabMouseControl = 0x18d04f0;
		constexpr auto HasMouseControl = 0x18d12e0;
		constexpr auto ReleaseMouseControl = 0x18d19f0;
		constexpr auto SetNextControlName = 0x18d1c80;
		constexpr auto InternalRepaintEditorWindow = 0x18d1600;
		constexpr auto cctor = 0x18d20e0;
		constexpr auto get_scrollTroughSide = 0x18d27b0;
		constexpr auto set_scrollTroughSide = 0x18d2d10;
		constexpr auto get_nextScrollStepTime = 0x18d26f0;
		constexpr auto set_nextScrollStepTime = 0x18d2c50;
		constexpr auto set_skin = 0x18d2dd0;
		constexpr auto get_skin = 0x18d28d0;
		constexpr auto DoSetSkin = 0x18ce970;
		constexpr auto get_matrix = 0x18d2660;
		constexpr auto set_matrix = 0x18d2bf0;
		constexpr auto Label = 0x18d1720;
		constexpr auto DrawTexture = 0x18cfb00;
		constexpr auto CalculateScaledTextureRects = 0x18cccc0;
		constexpr auto Box = 0x18cc0b0;
		constexpr auto Button = 0x18cc170;
		constexpr auto PasswordFieldGetStrToShow = 0x18d18c0;
		constexpr auto DoTextField = 0x18cedf0;
		constexpr auto HandleTextFieldEventForTouchscreen = 0x18d0d20;
		constexpr auto HandleTextFieldEventForDesktop = 0x18d0530;
		constexpr auto Toggle = 0x18d1f20;
		constexpr auto SelectionGrid = 0x18d1b20;
		constexpr auto CalcTotalHorizSpacing = 0x18ccab0;
		constexpr auto DoControl = 0x18ce2a0;
		constexpr auto DoLabel = 0x18ce6e0;
		constexpr auto DoToggle = 0x18cefb0;
		constexpr auto DoButton = 0x18ce170;
		constexpr auto DoButtonGrid = 0x18cd480;
		constexpr auto CalcMouseRects = 0x18cc590;
		constexpr auto HorizontalSlider = 0x18d13f0;
		constexpr auto Slider = 0x18d1cc0;
		constexpr auto BeginGroup = 0x18cba90;
		constexpr auto EndGroup = 0x18d04b0;
		constexpr auto get_scrollViewStates = 0x18d2870;
		constexpr auto CallWindowDelegate = 0x18ccff0;
		constexpr auto get_color_Injected = 0x18d24b0;
		constexpr auto set_color_Injected = 0x18d2a50;
		constexpr auto get_backgroundColor_Injected = 0x18d2360;
		constexpr auto set_backgroundColor_Injected = 0x18d2960;
		constexpr auto get_contentColor_Injected = 0x18d2570;
		constexpr auto set_contentColor_Injected = 0x18d2b00;
	};

	namespace UnityEngine_GUIStyle {
		constexpr auto m_Ptr = 0x10;
		constexpr auto m_Normal = 0x18;
		constexpr auto m_Hover = 0x20;
		constexpr auto m_Active = 0x28;
		constexpr auto m_Focused = 0x30;
		constexpr auto m_OnNormal = 0x38;
		constexpr auto m_OnHover = 0x40;
		constexpr auto m_OnActive = 0x48;
		constexpr auto m_OnFocused = 0x50;
		constexpr auto m_Border = 0x58;
		constexpr auto m_Padding = 0x60;
		constexpr auto m_Margin = 0x68;
		constexpr auto m_Overflow = 0x70;
		constexpr auto m_Name = 0x78;
		constexpr auto s_None = 0x8;

		constexpr auto get_rawName = 0x18c95f0;
		constexpr auto set_rawName = 0x18c99c0;
		constexpr auto get_font = 0x18c90e0;
		constexpr auto get_imagePosition = 0x18c9120;
		constexpr auto set_alignment = 0x18c9860;
		constexpr auto get_wordWrap = 0x18c96b0;
		constexpr auto get_contentOffset = 0x18c9010;
		constexpr auto set_contentOffset = 0x18c98f0;
		constexpr auto get_fixedWidth = 0x18c90a0;
		constexpr auto get_fixedHeight = 0x18c9060;
		constexpr auto get_stretchWidth = 0x18c9670;
		constexpr auto set_stretchWidth = 0x18c9a60;
		constexpr auto get_stretchHeight = 0x18c9630;
		constexpr auto set_stretchHeight = 0x18c9a10;
		constexpr auto set_fontSize = 0x18c9930;
		constexpr auto set_Internal_clipOffset = 0x18c9820;
		constexpr auto Internal_Create = 0x18c8420;
		constexpr auto Internal_Copy = 0x18c83d0;
		constexpr auto Internal_Destroy = 0x18c8460;
		constexpr auto GetStyleStatePtr = 0x18c8200;
		constexpr auto GetRectOffsetPtr = 0x18c81c0;
		constexpr auto Internal_GetLineHeight = 0x18c8af0;
		constexpr auto Internal_Draw = 0x18c8870;
		constexpr auto Internal_Draw2 = 0x18c8510;
		constexpr auto Internal_DrawCursor = 0x18c85f0;
		constexpr auto Internal_DrawWithTextSelection = 0x18c8710;
		constexpr auto Internal_GetCursorPixelPosition = 0x18c89a0;
		constexpr auto Internal_GetCursorStringIndex = 0x18c8a90;
		constexpr auto Internal_GetSelectedRenderedText = 0x18c8ba0;
		constexpr auto Internal_CalcSize = 0x18c7110;
		constexpr auto Internal_CalcSizeWithConstraints = 0x18c70b0;
		constexpr auto Internal_CalcHeight = 0x18c6fd0;
		constexpr auto Internal_CalcMinMaxWidth = 0x18c82a0;
		constexpr auto SetMouseTooltip = 0x18c8ca0;
		constexpr auto Internal_GetCursorFlashOffset = 0x18c8900;
		constexpr auto SetDefaultFont = 0x18c8c10;
		constexpr auto ctor = 0x18c8f40;
		constexpr auto Finalize = 0x18c7fe0;
		constexpr auto get_name = 0x18c9360;
		constexpr auto set_name = 0x18c9970;
		constexpr auto get_normal = 0x18c9480;
		constexpr auto get_margin = 0x18c92b0;
		constexpr auto get_padding = 0x18c9540;
		constexpr auto get_lineHeight = 0x18c9200;
		constexpr auto Draw = 0x18c7db0;
		constexpr auto DrawCursor = 0x18c7170;
		constexpr auto DrawWithTextSelection = 0x18c7630;
		constexpr auto op_Implicit = 0x18c96f0;
		constexpr auto get_none = 0x18c93c0;
		constexpr auto GetCursorPixelPosition = 0x18c80e0;
		constexpr auto GetCursorStringIndex = 0x18c8160;
		constexpr auto CalcSize = 0x18c7110;
		constexpr auto CalcSizeWithConstraints = 0x18c70b0;
		constexpr auto CalcHeight = 0x18c6fd0;
		constexpr auto get_isHeightDependantOnWidth = 0x18c9160;
		constexpr auto CalcMinMaxWidth = 0x18c7030;
		constexpr auto ToString = 0x18c8d20;
		constexpr auto cctor = 0x18c8e30;
		constexpr auto get_contentOffset_Injected = 0x18c8fc0;
		constexpr auto set_contentOffset_Injected = 0x18c98a0;
		constexpr auto set_Internal_clipOffset_Injected = 0x18c97d0;
		constexpr auto Internal_Draw_Injected = 0x18c87e0;
		constexpr auto Internal_Draw2_Injected = 0x18c84a0;
		constexpr auto Internal_DrawCursor_Injected = 0x18c8580;
		constexpr auto Internal_DrawWithTextSelection_Injected = 0x18c8660;
		constexpr auto Internal_GetCursorPixelPosition_Injected = 0x18c8930;
		constexpr auto Internal_GetCursorStringIndex_Injected = 0x18c8a20;
		constexpr auto Internal_GetSelectedRenderedText_Injected = 0x18c8b30;
		constexpr auto Internal_CalcSize_Injected = 0x18c8370;
		constexpr auto Internal_CalcSizeWithConstraints_Injected = 0x18c8300;
		constexpr auto Internal_CalcMinMaxWidth_Injected = 0x18c8240;
		constexpr auto SetMouseTooltip_Injected = 0x18c8c50;
	};

	namespace UnityEngine_Event {
		constexpr auto m_Ptr = 0x10;
		constexpr auto s_MasterEvent = 0x8;

		constexpr auto get_rawType = 0x18b8d10;
		constexpr auto get_mousePosition = 0x18b8c40;
		constexpr auto set_mousePosition = 0x18b9020;
		constexpr auto get_delta = 0x18b89c0;
		constexpr auto get_pointerType = 0x18b8c90;
		constexpr auto get_button = 0x18b87b0;
		constexpr auto get_modifiers = 0x18b8bb0;
		constexpr auto set_modifiers = 0x18b8f90;
		constexpr auto get_pressure = 0x18b8cd0;
		constexpr auto get_clickCount = 0x18b8830;
		constexpr auto get_character = 0x18b87f0;
		constexpr auto set_character = 0x18b8dd0;
		constexpr auto get_keyCode = 0x18b8b70;
		constexpr auto set_keyCode = 0x18b8f50;
		constexpr auto get_displayIndex = 0x18b8a10;
		constexpr auto set_displayIndex = 0x18b8f10;
		constexpr auto get_type = 0x18b8d90;
		constexpr auto set_type = 0x18b9060;
		constexpr auto get_commandName = 0x18b8870;
		constexpr auto set_commandName = 0x18b8e20;
		constexpr auto Internal_Use = 0x18b6690;
		constexpr auto Internal_Create = 0x18b6490;
		constexpr auto Internal_Destroy = 0x18b64d0;
		constexpr auto Internal_Copy = 0x18b6450;
		constexpr auto GetTypeForControl = 0x18b6410;
		constexpr auto CopyFromPtr = 0x18b5ef0;
		constexpr auto PopEvent = 0x18b7960;
		constexpr auto Internal_SetNativeEvent = 0x18b6650;
		constexpr auto Internal_MakeMasterEventCurrent = 0x18b6510;
		constexpr auto ctor = 0x18b86e0;
		constexpr auto Finalize = 0x18b6200;
		constexpr auto CopyFrom = 0x18b5f40;
		constexpr auto get_shift = 0x18b8d50;
		constexpr auto get_control = 0x18b88f0;
		constexpr auto get_alt = 0x18b8770;
		constexpr auto get_command = 0x18b88b0;
		constexpr auto get_current = 0x18b8930;
		constexpr auto set_current = 0x18b8e70;
		constexpr auto get_isKey = 0x18b8ac0;
		constexpr auto get_isMouse = 0x18b8b10;
		constexpr auto get_isDirectManipulationDevice = 0x18b8a50;
		constexpr auto KeyboardEvent = 0x18b66d0;
		constexpr auto GetHashCode = 0x18b62e0;
		constexpr auto Equals = 0x18b5fb0;
		constexpr auto ToString = 0x18b79a0;
		constexpr auto Use = 0x18b8480;
		constexpr auto get_mousePosition_Injected = 0x18b8bf0;
		constexpr auto set_mousePosition_Injected = 0x18b8fd0;
		constexpr auto get_delta_Injected = 0x18b8970;
	};

	namespace UnityEngine_Input {

		constexpr auto GetKeyInt = 0x20df5c0;
		constexpr auto GetKeyUpInt = 0x20df600;
		constexpr auto GetKeyDownInt = 0x20df580;
		constexpr auto GetAxis = 0x20df500;
		constexpr auto GetAxisRaw = 0x20df4c0;
		constexpr auto GetButtonDown = 0x20df540;
		constexpr auto GetMouseButton = 0x20df6c0;
		constexpr auto GetMouseButtonDown = 0x20df640;
		constexpr auto GetMouseButtonUp = 0x20df680;
		constexpr auto GetTouch = 0x20df740;
		constexpr auto GetKey = 0x20df5c0;
		constexpr auto GetKeyUp = 0x20df600;
		constexpr auto GetKeyDown = 0x20df580;
		constexpr auto get_anyKey = 0x20df7d0;
		constexpr auto get_anyKeyDown = 0x20df7a0;
		constexpr auto get_mousePosition = 0x20df920;
		constexpr auto get_mouseScrollDelta = 0x20df9d0;
		constexpr auto get_imeCompositionMode = 0x20df8b0;
		constexpr auto set_imeCompositionMode = 0x20dfc20;
		constexpr auto get_compositionString = 0x20df880;
		constexpr auto get_compositionCursorPos = 0x20df840;
		constexpr auto set_compositionCursorPos = 0x20dfbe0;
		constexpr auto get_mousePresent = 0x20df960;
		constexpr auto get_touchCount = 0x20dfa10;
		constexpr auto get_touchSupported = 0x20dfa40;
		constexpr auto get_touches = 0x20dfa70;
		constexpr auto GetTouch_Injected = 0x20df700;
		constexpr auto get_mousePosition_Injected = 0x20df8e0;
		constexpr auto get_mouseScrollDelta_Injected = 0x20df990;
		constexpr auto get_compositionCursorPos_Injected = 0x20df800;
		constexpr auto set_compositionCursorPos_Injected = 0x20dfba0;
	};

	namespace UnityEngine_DDraw {
		constexpr auto singleton = 0x8;
		constexpr auto list = 0x18;
		constexpr auto AutoYPosition = 0x10;
		constexpr auto LastAutoY = 0x14;
		constexpr auto lineMaterial = 0x18;
		constexpr auto _skin = 0x20;

		constexpr auto Get = 0x424d30;
		constexpr auto Capsule = 0x424950;
		constexpr auto Sphere = 0x4261d0;
		constexpr auto SphereGizmo = 0x425ee0;
		constexpr auto Line = 0x425000;
		constexpr auto Arrow = 0x423a20;
		constexpr auto ArrowPadded = 0x423320;
		constexpr auto Bounds = 0x423c50;
		constexpr auto Box = 0x424210;
		constexpr auto Text = 0x4264b0;
		constexpr auto ScreenText = 0x425d40;
		constexpr auto Awake = 0x423be0;
		constexpr auto OnPreRender = 0x425960;
		constexpr auto OnPostRender = 0x425620;
		constexpr auto OnGUI = 0x425450;
		constexpr auto CreateLineMaterial = 0x424bd0;
		constexpr auto get_skin = 0x4266c0;
		constexpr auto ctor = 0x426650;
		constexpr auto cctor = 0x2e7760;
	};

	namespace UnityEngine_Texture2D {

		constexpr auto get_format = 0x18729e0;
		constexpr auto get_whiteTexture = 0x1872a60;
		constexpr auto get_blackTexture = 0x18729b0;
		constexpr auto Compress = 0x1871380;
		constexpr auto Internal_CreateImpl = 0x1871990;
		constexpr auto Internal_Create = 0x18719f0;
		constexpr auto get_isReadable = 0x1872a20;
		constexpr auto ApplyImpl = 0x1871250;
		constexpr auto ResizeImpl = 0x1871ec0;
		constexpr auto SetPixelImpl = 0x1872200;
		constexpr auto GetPixelImpl = 0x18715f0;
		constexpr auto GetPixelBilinearImpl = 0x1871430;
		constexpr auto ResizeWithFormatImpl = 0x1871f10;
		constexpr auto ReadPixelsImpl = 0x1871cb0;
		constexpr auto SetPixelsImpl = 0x1872400;
		constexpr auto LoadRawTextureDataImpl = 0x1871ac0;
		constexpr auto SetAllPixels32 = 0x18720e0;
		constexpr auto SetBlockOfPixels32 = 0x1872140;
		constexpr auto GetPixels = 0x1871890;
		constexpr auto GetPixels32 = 0x1871790;
		constexpr auto ctor = 0x1872810;
		constexpr auto SetPixel = 0x1872270;
		constexpr auto SetPixels = 0x1872460;
		constexpr auto GetPixel = 0x1871670;
		constexpr auto GetPixelBilinear = 0x18714b0;
		constexpr auto LoadRawTextureData = 0x1871b20;
		constexpr auto Apply = 0x18712d0;
		constexpr auto Resize = 0x1872040;
		constexpr auto ReadPixels = 0x1871df0;
		constexpr auto SetPixels32 = 0x18720e0;
		constexpr auto SetPixelImpl_Injected = 0x18721a0;
		constexpr auto GetPixelImpl_Injected = 0x1871590;
		constexpr auto GetPixelBilinearImpl_Injected = 0x18713d0;
		constexpr auto ReadPixelsImpl_Injected = 0x1871c40;
	};

	namespace ModelState {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto waterLevel = 0x14;
		constexpr auto lookDir = 0x18;
		constexpr auto flags = 0x24;
		constexpr auto poseType = 0x28;
		constexpr auto inheritedVelocity = 0x2c;

		constexpr auto HasFlag = 0x1c25a50;
		constexpr auto SetFlag = 0x1c26500;
		constexpr auto get_ducked = 0x1c26580;
		constexpr auto set_ducked = 0x1c26650;
		constexpr auto get_jumped = 0x1c265a0;
		constexpr auto set_jumped = 0x1c26690;
		constexpr auto get_onground = 0x1c265e0;
		constexpr auto set_onground = 0x1c26710;
		constexpr auto get_sleeping = 0x1c26610;
		constexpr auto set_sleeping = 0x1c26770;
		constexpr auto get_sprinting = 0x1c26620;
		constexpr auto set_sprinting = 0x1c26790;
		constexpr auto get_onLadder = 0x1c265c0;
		constexpr auto set_onLadder = 0x1c266d0;
		constexpr auto get_flying = 0x1c26590;
		constexpr auto set_flying = 0x1c26670;
		constexpr auto get_aiming = 0x1c26570;
		constexpr auto set_aiming = 0x1c26630;
		constexpr auto get_prone = 0x1c265f0;
		constexpr auto set_prone = 0x1c26730;
		constexpr auto get_mounted = 0x1c265b0;
		constexpr auto set_mounted = 0x1c266b0;
		constexpr auto get_relaxed = 0x1c26600;
		constexpr auto set_relaxed = 0x1c26750;
		constexpr auto get_onPhone = 0x1c265d0;
		constexpr auto set_onPhone = 0x1c266f0;
		constexpr auto Equal = 0x1c256f0;
		constexpr auto ResetToPool = 0x1c25b30;
		constexpr auto Dispose = 0x1c25670;
		constexpr auto EnterPool = 0xa00570;
		constexpr auto LeavePool = 0xa005a0;
		constexpr auto CopyTo = 0x1c24350;
		constexpr auto Copy = 0x1c243a0;
		constexpr auto Deserialize = 0x1c253f0;
		constexpr auto DeserializeLengthDelimited = 0x1c24440;
		constexpr auto DeserializeLength = 0x1c24ad0;
		constexpr auto FromProto = 0x1c25800;
		constexpr auto WriteToStream = 0x1c26530;
		constexpr auto WriteToStreamDelta = 0x1c26550;
		constexpr auto ReadFromStream = 0x1c25a60;
		constexpr auto SerializeDelta = 0x1c25be0;
		constexpr auto Serialize = 0x1c26240;
		constexpr auto ToProtoBytes = 0x1c26520;
		constexpr auto ToProto = 0x1c26530;
		constexpr auto SerializeToBytes = 0x1c26130;
		constexpr auto SerializeLengthDelimited = 0x1c26080;
		constexpr auto ctor = 0xa00d40;
	};

	namespace ProtoBuf_PlayerProjectileUpdate {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto projectileID = 0x14;
		constexpr auto curPosition = 0x18;
		constexpr auto curVelocity = 0x24;
		constexpr auto travelTime = 0x30;

		constexpr auto ResetToPool = 0x1d20790;
		constexpr auto Dispose = 0x1d20430;
		constexpr auto EnterPool = 0xa00570;
		constexpr auto LeavePool = 0xa005a0;
		constexpr auto CopyTo = 0x1c840c0;
		constexpr auto Copy = 0x1d1f300;
		constexpr auto Deserialize = 0x1d1fa30;
		constexpr auto DeserializeLengthDelimited = 0x1d1f3a0;
		constexpr auto DeserializeLength = 0x1d1f9a0;
		constexpr auto FromProto = 0x1d20560;
		constexpr auto WriteToStream = 0x1d211a0;
		constexpr auto WriteToStreamDelta = 0x1d211c0;
		constexpr auto ReadFromStream = 0x1d20770;
		constexpr auto SerializeDelta = 0x1d208f0;
		constexpr auto Serialize = 0x1d20f00;
		constexpr auto ToProtoBytes = 0x1d21190;
		constexpr auto ToProto = 0x1d211a0;
		constexpr auto SerializeToBytes = 0x1d20df0;
		constexpr auto SerializeLengthDelimited = 0x1d20d40;
		constexpr auto ctor = 0xa00d40;
	};

	namespace Projectile {
		constexpr auto initialVelocity = 0x18;
		constexpr auto drag = 0x24;
		constexpr auto gravityModifier = 0x28;
		constexpr auto thickness = 0x2c;
		constexpr auto initialDistance = 0x30;
		constexpr auto remainInWorld = 0x34;
		constexpr auto stickProbability = 0x38;
		constexpr auto breakProbability = 0x3c;
		constexpr auto conditionLoss = 0x40;
		constexpr auto ricochetChance = 0x44;
		constexpr auto penetrationPower = 0x48;
		constexpr auto damageProperties = 0x50;
		constexpr auto damageDistances = 0x58;
		constexpr auto damageMultipliers = 0x60;
		constexpr auto damageTypes = 0x68;
		constexpr auto rendererToScale = 0x70;
		constexpr auto firstPersonRenderer = 0x78;
		constexpr auto createDecals = 0x80;
		constexpr auto doDefaultHitEffects = 0x81;
		constexpr auto flybySound = 0x88;
		constexpr auto flybySoundDistance = 0x90;
		constexpr auto closeFlybySound = 0x98;
		constexpr auto closeFlybyDistance = 0xa0;
		constexpr auto tumbleSpeed = 0xa4;
		constexpr auto tumbleAxis = 0xa8;
		constexpr auto swimScale = 0xb4;
		constexpr auto swimSpeed = 0xc0;
		constexpr auto owner = 0xd0;
		constexpr auto sourceWeaponPrefab = 0xd8;
		constexpr auto sourceProjectilePrefab = 0xe0;
		constexpr auto mod = 0xe8;
		constexpr auto projectileID = 0xf0;
		constexpr auto seed = 0xf4;
		constexpr auto clientsideEffect = 0xf8;
		constexpr auto clientsideAttack = 0xf9;
		constexpr auto integrity = 0xfc;
		constexpr auto maxDistance = 0x100;
		constexpr auto modifier = 0x104;
		constexpr auto invisible = 0x114;
		constexpr auto currentVelocity = 0x118;
		constexpr auto currentPosition = 0x124;
		constexpr auto traveledDistance = 0x130;
		constexpr auto traveledTime = 0x134;
		constexpr auto launchTime = 0x138;
		constexpr auto sentPosition = 0x13c;
		constexpr auto previousPosition = 0x148;
		constexpr auto previousVelocity = 0x154;
		constexpr auto previousTraveledTime = 0x160;
		constexpr auto isRicochet = 0x164;
		constexpr auto isRetiring = 0x165;
		constexpr auto flybyPlayed = 0x166;
		constexpr auto wasFacingPlayer = 0x167;
		constexpr auto flybyPlane = 0x168;
		constexpr auto flybyRay = 0x178;
		constexpr auto cleanupAction = 0x190;
		constexpr auto hitTest = 0x198;
		constexpr auto swimRandom = 0x1a0;
		constexpr auto _waterMaterialID = 0x4;
		constexpr auto cachedWaterString = 0x8;

		constexpr auto CalculateDamage = 0x8ad100;
		constexpr auto get_isAuthoritative = 0x8b1e60;
		constexpr auto get_isAlive = 0x8b1e20;
		constexpr auto Retire = 0x8b0c10;
		constexpr auto Cleanup = 0x8ad650;
		constexpr auto AdjustVelocity = 0x8ace90;
		constexpr auto InitializeVelocity = 0x8afea0;
		constexpr auto OnDisable = 0x8b00c0;
		constexpr auto Update = 0x8b1a80;
		constexpr auto SetEffectScale = 0x8b11e0;
		constexpr auto DoFlybySound = 0x8ad850;
		constexpr auto CalculateEffectScale = 0x8ad5b0;
		constexpr auto UpdateVelocity = 0x8b17a0;
		constexpr auto DoVelocityUpdate = 0x8af6b0;
		constexpr auto DoMovement = 0x8ae570;
		constexpr auto DoWaterHit = 0x8afa90;
		constexpr auto DoRicochet = 0x8af290;
		constexpr auto DoHit = 0x8ade60;
		constexpr auto AdditiveImpactEffect = 0x2e7760;
		constexpr auto Reflect = 0x8b0390;
		constexpr auto Refract = 0x8b06e0;
		constexpr auto RandomRotation = 0x8b0290;
		constexpr auto Launch = 0x8b0030;
		constexpr auto FleshMaterialID = 0x8afda0;
		constexpr auto WaterMaterialID = 0x8b1b80;
		constexpr auto IsWaterMaterial = 0x8aff00;
		constexpr auto ShouldStopProjectile = 0x8b16e0;
		constexpr auto ctor = 0x8b1c80;
		constexpr auto cctor = 0x2e7760;
	};

	namespace PlayerEyes {
		constexpr auto DuckOffset = 0xc;
		constexpr auto thirdPersonSleepingOffset = 0x20;
		constexpr auto defaultLazyAim = 0x30;
		constexpr auto viewOffset = 0x38;
		constexpr auto bodyRotationk__BackingField = 0x44;
		constexpr auto headAnglesk__BackingField = 0x54;
		constexpr auto rotationLookk__BackingField = 0x60;
		constexpr auto IsAltLookingLegsThresholdk__BackingField = 0x70;

		constexpr auto get_worldMountedPosition = 0xaba150;
		constexpr auto get_worldStandingPosition = 0xaba340;
		constexpr auto get_worldCrouchedPosition = 0xaba050;
		constexpr auto get_position = 0xab9c50;
		constexpr auto get_BodyLeanOffset = 0xab9220;
		constexpr auto get_center = 0xab9670;
		constexpr auto get_offset = 0xab9990;
		constexpr auto get_rotation = 0xab9fa0;
		constexpr auto set_rotation = 0xaba4a0;
		constexpr auto get_bodyRotation = 0xab9590;
		constexpr auto set_bodyRotation = 0xaba470;
		constexpr auto get_headAngles = 0xab9970;
		constexpr auto set_headAngles = 0xaba480;
		constexpr auto get_rotationLook = 0xab9f90;
		constexpr auto set_rotationLook = 0xaba490;
		constexpr auto get_parentRotation = 0xab9ac0;
		constexpr auto get_canUpdateViewAngles = 0xab95a0;
		constexpr auto get_IsAltLookingLegsThreshold = 0xab9580;
		constexpr auto set_IsAltLookingLegsThreshold = 0xaba460;
		constexpr auto FrameUpdate = 0xab7ef0;
		constexpr auto UpdateCamera = 0xab8f00;
		constexpr auto DoFirstPersonCamera = 0xab6430;
		constexpr auto DoInEyeCamera = 0xab66f0;
		constexpr auto DoThirdPersonCamera = 0xab6970;
		constexpr auto ApplyCameraMoves = 0xab5e00;
		constexpr auto MovementForward = 0xab8b80;
		constexpr auto MovementRight = 0xab8d40;
		constexpr auto BodyRay = 0xab5fe0;
		constexpr auto BodyForward = 0xab5e90;
		constexpr auto BodyRight = 0xab6190;
		constexpr auto BodyUp = 0xab62e0;
		constexpr auto HeadRay = 0xab8740;
		constexpr auto HeadForward = 0xab8650;
		constexpr auto HeadRight = 0xab89a0;
		constexpr auto HeadUp = 0xab8a90;
		constexpr auto GetLookRotation = 0xab84d0;
		constexpr auto GetAimRotation = 0xab8410;
		constexpr auto ctor = 0xab9160;
		constexpr auto cctor = 0xab90a0;
	};

	namespace ViewModel {
		constexpr auto viewModelPrefab = 0x18;
		constexpr auto targetEntity = 0x20;
		constexpr auto instance = 0x28;

		constexpr auto Deploy = 0x972f10;
		constexpr auto OnDisable = 0x973260;
		constexpr auto Holster = 0x9731f0;
		constexpr auto Clear = 0x972da0;
		constexpr auto OnFrame = 0x9732d0;
		constexpr auto Play = 0x9733b0;
		constexpr auto ResetTrigger = 0x9734d0;
		constexpr auto Trigger = 0x9737e0;
		constexpr auto CrossFade = 0x972e70;
		constexpr auto SetBool = 0x973600;
		constexpr auto SetFloat = 0x973740;
		constexpr auto set_ironSights = 0x973900;
		constexpr auto ctor = 0x2e02e0;
	};

	namespace BowWeapon {
		constexpr auto attackReady = 0x348;
		constexpr auto arrowBack = 0x34c;
		constexpr auto swapArrows = 0x350;
		constexpr auto wasAiming = 0x358;

		constexpr auto OnRpcMessage = 0x52a590;
		constexpr auto ClientInit = 0x529cf0;
		constexpr auto OnSignal = 0x52a680;
		constexpr auto UpdatePullbackThink = 0x52aa40;
		constexpr auto CancelPullbackThink = 0x529c80;
		constexpr auto PullbackThink = 0x52a900;
		constexpr auto OnInput = 0x52a210;
		constexpr auto OnHolstered = 0x52a1d0;
		constexpr auto DoAttack = 0x529d60;
		constexpr auto IsAiming = 0x52a000;
		constexpr auto OnViewmodelEvent = 0x52a7f0;
		constexpr auto OnFrame = 0x52a0a0;
		constexpr auto PostNetworkUpdate = 0x52a860;
		constexpr auto TryReload = 0x52a9d0;
		constexpr auto ctor = 0x2e6ee0;
	};

	namespace AttackEntity {
		constexpr auto deployDelay = 0x1d8;
		constexpr auto repeatDelay = 0x1dc;
		constexpr auto animationDelay = 0x1e0;
		constexpr auto effectiveRange = 0x1e4;
		constexpr auto npcDamageScale = 0x1e8;
		constexpr auto attackLengthMin = 0x1ec;
		constexpr auto attackLengthMax = 0x1f0;
		constexpr auto attackSpacing = 0x1f4;
		constexpr auto aiAimSwayOffset = 0x1f8;
		constexpr auto aiAimCone = 0x1fc;
		constexpr auto aiOnlyInRange = 0x200;
		constexpr auto effectiveRangeType = 0x201;
		constexpr auto CloseRangeAddition = 0x204;
		constexpr auto MediumRangeAddition = 0x208;
		constexpr auto LongRangeAddition = 0x20c;
		constexpr auto CanUseAtMediumRange = 0x210;
		constexpr auto CanUseAtLongRange = 0x211;
		constexpr auto reloadSounds = 0x218;
		constexpr auto thirdPersonMeleeSound = 0x220;
		constexpr auto recoilCompDelayOverride = 0x228;
		constexpr auto wantsRecoilComp = 0x22c;
		constexpr auto nextAttackTime = 0x230;
		constexpr auto lastTickTime = 0x234;
		constexpr auto nextTickTime = 0x238;
		constexpr auto timeSinceDeploy = 0x23c;
		constexpr auto lastRecoilCompTime = 0x240;
		constexpr auto startAimingDirection = 0x244;
		constexpr auto wasDoingRecoilComp = 0x250;
		constexpr auto reductionSpeed = 0x254;

		constexpr auto GetInheritedVelocity = 0x39e810;
		constexpr auto get_NextAttackTime = 0x39ecf0;
		constexpr auto GetAttackStats = 0x2e7760;
		constexpr auto StartAttackCooldownRaw = 0x39ea30;
		constexpr auto StartAttackCooldown = 0x39ea60;
		constexpr auto ResetAttackCooldown = 0x39ea20;
		constexpr auto HasAttackCooldown = 0x39e880;
		constexpr auto GetAttackCooldown = 0x39e710;
		constexpr auto GetAttackIdle = 0x39e790;
		constexpr auto CalculateCooldownTime = 0x39dcc0;
		constexpr auto IsFullyDeployed = 0x39e8b0;
		constexpr auto ProcessInputTime = 0x39e950;
		constexpr auto OnInput = 0x39e8f0;
		constexpr auto OnDeploy = 0x39e8d0;
		constexpr auto RecoilCompReady = 0x39e9a0;
		constexpr auto AddPunch = 0x39db10;
		constexpr auto DoRecoilCompensation = 0x39de00;
		constexpr auto ctor = 0x39ec00;
		constexpr auto cctor = 0x39eb90;
	};

	namespace BaseEntity {
		constexpr auto ragdoll = 0x70;
		constexpr auto positionLerp = 0x78;
		constexpr auto menuOptions = 0x80;
		constexpr auto globalBroadcastProtocol = 0x8;
		constexpr auto broadcastProtocol = 0x88;
		constexpr auto links = 0x90;
		constexpr auto linkedToNeighbours = 0x98;
		constexpr auto updateParentingAction = 0xa0;
		constexpr auto addedToParentEntity = 0xa8;
		constexpr auto itemSkin = 0xb0;
		constexpr auto entitySlots = 0xb8;
		constexpr auto triggers = 0xc0;
		constexpr auto isVisible = 0xc8;
		constexpr auto isAnimatorVisible = 0xc9;
		constexpr auto isShadowVisible = 0xca;
		constexpr auto localOccludee = 0xd0;
		constexpr auto bounds = 0xf0;
		constexpr auto impactEffect = 0x108;
		constexpr auto enableSaving = 0x110;
		constexpr auto syncPosition = 0x111;
		constexpr auto model = 0x118;
		constexpr auto flags = 0x120;
		constexpr auto parentBone = 0x124;
		constexpr auto skinID = 0x128;
		constexpr auto _components = 0x130;
		constexpr auto _name = 0x138;
		constexpr auto OwnerIDk__BackingField = 0x140;

		constexpr auto OnRpcMessage = 0x3b3c00;
		constexpr auto GetEntityMenu = 0x3af310;
		constexpr auto GetMenuOptions = 0x2e7760;
		constexpr auto get_HasMenuOptions = 0x2e6930;
		constexpr auto GetItemOptions = 0x3af9c0;
		constexpr auto GetMovementModify = 0x3b0520;
		constexpr auto GetExtrapolationTime = 0x3af450;
		constexpr auto GetInterpolationDelay = 0x3af810;
		constexpr auto GetInterpolationInertia = 0x3af8a0;
		constexpr auto GetInterpolationSmoothing = 0x3af930;
		constexpr auto GetAngularVelocityClient = 0x3aedb0;
		constexpr auto GetLocalVelocityClient = 0x3afc10;
		constexpr auto DrawInterpolationState = 0x3ad380;
		constexpr auto LerpIdleDisable = 0x3b2590;
		constexpr auto ClientInit = 0x3ac950;
		constexpr auto ClientOnEnable = 0x3aca00;
		constexpr auto OnPositionalFromNetwork = 0x3b38a0;
		constexpr auto StartLerping = 0x3b6780;
		constexpr auto StopLerping = 0x3b6900;
		constexpr auto ShouldLerp = 0x3b6380;
		constexpr auto SetNetworkPosition = 0x3b5e70;
		constexpr auto SetNetworkRotation = 0x3b5fe0;
		constexpr auto DoDestroyEffects = 0x3ad360;
		constexpr auto SpawnGibs = 0x3b6480;
		constexpr auto DoNetworkDestroy = 0x315d90;
		constexpr auto PostNetworkUpdate = 0x3b4e40;
		constexpr auto OnBecameRagdoll = 0x3b35e0;
		constexpr auto GetMenuInformation = 0x3afd90;
		constexpr auto HideMenuItems = 0x3b1270;
		constexpr auto GetMenuItems = 0x3b0180;
		constexpr auto OnUse = 0x3b4c70;
		constexpr auto OnUseHeld = 0x3b4ae0;
		constexpr auto OnUseStopped = 0x2e7760;
		constexpr auto OnRendered = 0x2e7760;
		constexpr auto DoClientDestroy = 0x3ad100;
		constexpr auto GetEyeTransform = 0x3af4e0;
		constexpr auto NeedsCrosshair = 0x3b34d0;
		constexpr auto AlwaysShowCrosshair = 0x2e6930;
		constexpr auto ShouldDestroyWithGroup = 0x3b62d0;
		constexpr auto DetachEffects = 0x3acd00;
		constexpr auto OnVoiceData = 0x2e7760;
		constexpr auto get_RealisticMass = 0x2e5120;
		constexpr auto OnCollision = 0x3b3690;
		constexpr auto ReceiveCollisionMessages = 0x3b4f30;
		constexpr auto DebugClient = 0x2e7760;
		constexpr auto OnDebugStart = 0x3b36e0;
		constexpr auto DebugText = 0x3acc40;
		constexpr auto HasFlag = 0x3b1230;
		constexpr auto ParentHasFlag = 0x3b4da0;
		constexpr auto SetFlag = 0x3b5ca0;
		constexpr auto IsOn = 0x3a1590;
		constexpr auto IsOpen = 0x3b1880;
		constexpr auto IsOnFire = 0x3b1870;
		constexpr auto IsLocked = 0x3b15c0;
		constexpr auto IsDebugging = 0x3b13d0;
		constexpr auto IsDisabled = 0x3b13e0;
		constexpr auto IsBroken = 0x3b13c0;
		constexpr auto IsBusy = 0x3b1270;
		constexpr auto GetLogColor = 0x3afd40;
		constexpr auto OnFlagsChanged = 0x3b37a0;
		constexpr auto IsOccupied = 0x3b16c0;
		constexpr auto FindLink = 0x3adf70;
		constexpr auto EntityLinkBroadcast = 0x3adb30;
		constexpr auto ReceivedEntityLinkBroadcast = 0x3b4fc0;
		constexpr auto GetEntityLinks = 0x3af2d0;
		constexpr auto LinkToEntity = 0x3b25c0;
		constexpr auto LinkToNeighbours = 0x3b2820;
		constexpr auto InitEntityLinks = 0x3b1280;
		constexpr auto FreeEntityLinks = 0x3aecd0;
		constexpr auto RefreshEntityLinks = 0x3b5030;
		constexpr auto RequestFileFromServer = 0x3b5570;
		constexpr auto Cl_ReceiveFilePng = 0x3ac820;
		constexpr auto UpdateChildren = 0x3b6ac0;
		constexpr auto UpdateParenting = 0x3b78b0;
		constexpr auto SetParentTransform = 0x3b60b0;
		constexpr auto UpdateDisableState = 0x3b6e30;
		constexpr auto HasClientTransformOffset = 0x3b1090;
		constexpr auto RemoveClientTransformOffset = 0x3b5340;
		constexpr auto AddClientTransformOffset = 0x3ac0e0;
		constexpr auto OnParentChangingClient = 0x2e7760;
		constexpr auto GetBuildingPrivilege = 0x3af260;
		constexpr auto ServerRPC = 0x3b5960;
		constexpr auto ServerRPCStart = 0x3b57b0;
		constexpr auto ServerRPCSend = 0x3b5740;
		constexpr auto CL_RPCMessage = 0x3ac3f0;
		constexpr auto SendSignalBroadcast = 0x3b5690;
		constexpr auto SignalFromServerEx = 0x3b63a0;
		constexpr auto SignalFromServer = 0x3b6430;
		constexpr auto OnSignal = 0x2e7760;
		constexpr auto OnSkinChanged = 0x3b47b0;
		constexpr auto OnSkinRefreshStart = 0x3b4ac0;
		constexpr auto OnSkinRefreshEnd = 0x3b4aa0;
		constexpr auto PreProcess = 0x3b4e60;
		constexpr auto HasAnySlot = 0x3b0fb0;
		constexpr auto GetSlot = 0x3b0b30;
		constexpr auto GetSlotAnchorName = 0x3b09f0;
		constexpr auto GetSlotAnchor = 0x3b0a80;
		constexpr auto HasSlot = 0x2e6930;
		constexpr auto get_Traits = 0x2e1bf0;
		constexpr auto HasTrait = 0x3b1240;
		constexpr auto HasAnyTrait = 0x3b1060;
		constexpr auto EnterTrigger = 0x3ada80;
		constexpr auto LeaveTrigger = 0x3b24f0;
		constexpr auto RemoveFromTriggers = 0x3b53a0;
		constexpr auto ForceUpdateTriggersAction = 0x3ae250;
		constexpr auto ForceUpdateTriggers = 0x3ae280;
		constexpr auto MakeVisible = 0x3b34b0;
		constexpr auto UpdateCullingSpheres = 0x3b6cb0;
		constexpr auto RegisterForCulling = 0x3b5110;
		constexpr auto OnVisibilityChanged = 0x2e7760;
		constexpr auto UnregisterFromCulling = 0x3b6a40;
		constexpr auto UpdateCullingBounds = 0x3b6be0;
		constexpr auto CheckVisibility = 0x3ac800;
		constexpr auto CalcEntityVisUpdateRate = 0x3ac6e0;
		constexpr auto DebugDrawCullingBounds = 0x3acb70;
		constexpr auto get_Components = 0x3b7e80;
		constexpr auto ToPlayer = 0x2e1bf0;
		constexpr auto get_IsNpc = 0x2e6930;
		constexpr auto InitShared = 0x3a5ec0;
		constexpr auto DestroyShared = 0x3a92a0;
		constexpr auto ResetState = 0x3b5620;
		constexpr auto InheritedVelocityScale = 0x2eea80;
		constexpr auto GetInheritedProjectileVelocity = 0x3af660;
		constexpr auto GetInheritedThrowVelocity = 0x3af7e0;
		constexpr auto GetInheritedDropVelocity = 0x3af580;
		constexpr auto GetParentVelocity = 0x3b0730;
		constexpr auto GetWorldVelocity = 0x3b0b90;
		constexpr auto GetLocalVelocity = 0x3afca0;
		constexpr auto GetAngularVelocity = 0x3aee40;
		constexpr auto WorldSpaceBounds = 0x3b7bb0;
		constexpr auto PivotPoint = 0x3977f0;
		constexpr auto CenterPoint = 0x3ac7c0;
		constexpr auto ClosestPoint = 0x3acad0;
		constexpr auto TriggerPoint = 0x3ac7c0;
		constexpr auto Distance = 0x3acfc0;
		constexpr auto SqrDistance = 0x3b6640;
		constexpr auto Distance2D = 0x3ace30;
		constexpr auto SqrDistance2D = 0x3b64b0;
		constexpr auto IsVisible = 0x3b2140;
		constexpr auto IsVisibleAndCanSee = 0x3b1b70;
		constexpr auto IsOlderThan = 0x3b17d0;
		constexpr auto IsOutside = 0x3b1890;
		constexpr auto WaterFactor = 0x3b78c0;
		constexpr auto WaterTestFromVolumes = 0x3b7a80;
		constexpr auto IsInWaterVolume = 0x3b1480;
		constexpr auto BlocksWaterFor = 0x2e6930;
		constexpr auto Health = 0x2eea80;
		constexpr auto MaxHealth = 0x2eea80;
		constexpr auto MaxVelocity = 0x2eea80;
		constexpr auto BoundsPadding = 0x3ac180;
		constexpr auto PenetrationResistance = 0x2eecf0;
		constexpr auto GetImpactEffect = 0x3af570;
		constexpr auto OnAttacked = 0x2e7760;
		constexpr auto GetItem = 0x2e1bf0;
		constexpr auto GiveItem = 0x3b0f80;
		constexpr auto CanBeLooted = 0x2e9440;
		constexpr auto GetEntity = 0x310240;
		constexpr auto ToString = 0x3b6950;
		constexpr auto Categorize = 0x3ac790;
		constexpr auto Log = 0x3b3000;
		constexpr auto SetModel = 0x3b5dc0;
		constexpr auto GetModel = 0x3b0510;
		constexpr auto GetBones = 0x3aeee0;
		constexpr auto FindBone = 0x3ade00;
		constexpr auto FindClosestBone = 0x3adeb0;
		constexpr auto get_OwnerID = 0x3b7ef0;
		constexpr auto set_OwnerID = 0x3b7f00;
		constexpr auto ShouldBlockProjectiles = 0x2e9440;
		constexpr auto ShouldInheritNetworkGroup = 0x2e9440;
		constexpr auto SupportsChildDeployables = 0x2e9440;
		constexpr auto BroadcastEntityMessage = 0x3ac190;
		constexpr auto OnEntityMessage = 0x2e7760;
		constexpr auto Load = 0x3b2b00;
		constexpr auto ctor = 0x3b7d70;
		constexpr auto cctor = 0x3b7cf0;
	};

	namespace UnityEngine_Time {

		constexpr auto get_time = 0x1f7bf80;
		constexpr auto get_deltaTime = 0x1f7bdd0;
		constexpr auto get_fixedTime = 0x1f7be30;
		constexpr auto get_unscaledTime = 0x1f7bfe0;
		constexpr auto get_unscaledDeltaTime = 0x1f7bfb0;
		constexpr auto get_fixedDeltaTime = 0x1f7be00;
		constexpr auto set_fixedDeltaTime = 0x1f7c010;
		constexpr auto get_maximumDeltaTime = 0x1f7be90;
		constexpr auto set_maximumDeltaTime = 0x1f7c050;
		constexpr auto get_smoothDeltaTime = 0x1f7bf20;
		constexpr auto get_timeScale = 0x1f7bf50;
		constexpr auto set_timeScale = 0x1f7c090;
		constexpr auto get_frameCount = 0x1f7be60;
		constexpr auto get_renderedFrameCount = 0x1f7bef0;
		constexpr auto get_realtimeSinceStartup = 0x1f7bec0;
	};

	namespace UnityEngine_Physics {

		constexpr auto get_gravity = 0x206c0b0;
		constexpr auto get_defaultPhysicsScene = 0x206c030;
		constexpr auto IgnoreCollision = 0x20688e0;
		constexpr auto Raycast = 0x206a850;
		constexpr auto Linecast = 0x2068a20;
		constexpr auto CapsuleCast = 0x20681d0;
		constexpr auto SphereCast = 0x206bac0;
		constexpr auto BoxCast = 0x2067d60;
		constexpr auto Internal_RaycastAll = 0x20689b0;
		constexpr auto RaycastAll = 0x2069590;
		constexpr auto RaycastNonAlloc = 0x2069cb0;
		constexpr auto Query_SphereCastAll = 0x2069430;
		constexpr auto SphereCastAll = 0x206b530;
		constexpr auto SyncTransforms = 0x206bf90;
		constexpr auto get_autoSyncTransforms = 0x206bfc0;
		constexpr auto set_autoSyncTransforms = 0x206c0f0;
		constexpr auto OverlapSphereNonAlloc = 0x2069300;
		constexpr auto CheckSphere_Internal = 0x20687b0;
		constexpr auto CheckSphere = 0x2068820;
		constexpr auto SphereCastNonAlloc = 0x206b6c0;
		constexpr auto CheckCapsule_Internal = 0x2068510;
		constexpr auto CheckCapsule = 0x2068580;
		constexpr auto CheckBox_Internal = 0x2068350;
		constexpr auto CheckBox = 0x20683c0;
		constexpr auto OverlapBox_Internal = 0x2068fe0;
		constexpr auto OverlapBox = 0x2069050;
		constexpr auto OverlapBoxNonAlloc = 0x2068e80;
		constexpr auto OverlapCapsuleNonAlloc = 0x2069210;
		constexpr auto get_gravity_Injected = 0x206c070;
		constexpr auto get_defaultPhysicsScene_Injected = 0x206bff0;
		constexpr auto Internal_RaycastAll_Injected = 0x2068940;
		constexpr auto Query_SphereCastAll_Injected = 0x20693c0;
		constexpr auto CheckSphere_Internal_Injected = 0x2068740;
		constexpr auto CheckCapsule_Internal_Injected = 0x20684a0;
		constexpr auto CheckBox_Internal_Injected = 0x20682e0;
		constexpr auto OverlapBox_Internal_Injected = 0x2068f70;
	};

	namespace AssetNameCache {
		constexpr auto lower = 0x8;
		constexpr auto upper = 0x10;

		constexpr auto LookupName = 0x39a350;
		constexpr auto LookupNameLower = 0x39a090;
		constexpr auto LookupNameUpper = 0x39a1f0;
		constexpr auto GetName = 0x399fd0;
		constexpr auto GetNameLower = 0x399e50;
		constexpr auto GetNameUpper = 0x399f10;
		constexpr auto cctor = 0x39a490;
	};

	namespace UnityEngine_Component {

		constexpr auto get_transform = 0x1795940;
		constexpr auto get_gameObject = 0x1795900;
		constexpr auto GetComponent = 0x17954e0;
		constexpr auto GetComponentFastPath = 0x1795370;
		constexpr auto GetComponentInChildren = 0x17953d0;
		constexpr auto GetComponentsInChildren = 0x17955c0;
		constexpr auto GetComponentInParent = 0x1795460;
		constexpr auto GetComponents = 0x1795620;
		constexpr auto GetComponentsForListInternal = 0x1795560;
		constexpr auto CompareTag = 0x17952f0;
		constexpr auto SendMessageUpwards = 0x1795710;
		constexpr auto SendMessage = 0x1795850;
		constexpr auto BroadcastMessage = 0x1795280;
		constexpr auto ctor = 0x17903a0;
	};

	namespace UnityEngine_Transform {

		constexpr auto ctor = 0x17b3580;
		constexpr auto get_position = 0x1f7ede0;
		constexpr auto set_position = 0x1f7f760;
		constexpr auto get_localPosition = 0x1f7eab0;
		constexpr auto set_localPosition = 0x1f7f4d0;
		constexpr auto get_eulerAngles = 0x1f7e7b0;
		constexpr auto set_eulerAngles = 0x1f7f220;
		constexpr auto get_localEulerAngles = 0x1f7e9d0;
		constexpr auto set_localEulerAngles = 0x1f7f3d0;
		constexpr auto get_right = 0x1f7ee30;
		constexpr auto set_right = 0x1f7f7b0;
		constexpr auto get_up = 0x1f7f020;
		constexpr auto set_up = 0x1f7f9a0;
		constexpr auto get_forward = 0x1f7e840;
		constexpr auto set_forward = 0x1f7f2d0;
		constexpr auto get_rotation = 0x1f7efd0;
		constexpr auto set_rotation = 0x1f7f950;
		constexpr auto get_localRotation = 0x1f7eb50;
		constexpr auto set_localRotation = 0x1f7f570;
		constexpr auto get_localScale = 0x1f7ebf0;
		constexpr auto set_localScale = 0x1f7f610;
		constexpr auto get_parent = 0x1f7d210;
		constexpr auto set_parent = 0x1f7f660;
		constexpr auto get_parentInternal = 0x1f7d210;
		constexpr auto set_parentInternal = 0x1f7e1f0;
		constexpr auto GetParent = 0x1f7d210;
		constexpr auto SetParent = 0x1f7e1f0;
		constexpr auto get_worldToLocalMatrix = 0x1f7f1c0;
		constexpr auto get_localToWorldMatrix = 0x1f7ec90;
		constexpr auto SetPositionAndRotation = 0x1f7e2a0;
		constexpr auto Translate = 0x1f7e5a0;
		constexpr auto Rotate = 0x1f7dc00;
		constexpr auto RotateAroundInternal = 0x1f7d960;
		constexpr auto RotateAround = 0x1f7d9c0;
		constexpr auto LookAt = 0x1f7d790;
		constexpr auto Internal_LookAt = 0x1f7d330;
		constexpr auto TransformDirection = 0x1f7e360;
		constexpr auto InverseTransformDirection = 0x1f7d3f0;
		constexpr auto TransformVector = 0x1f7e4e0;
		constexpr auto InverseTransformVector = 0x1f7d570;
		constexpr auto TransformPoint = 0x1f7e420;
		constexpr auto InverseTransformPoint = 0x1f7d4b0;
		constexpr auto get_root = 0x1f7d250;
		constexpr auto GetRoot = 0x1f7d250;
		constexpr auto get_childCount = 0x1f7e770;
		constexpr auto DetachChildren = 0x1f7d020;
		constexpr auto SetAsFirstSibling = 0x1f7e110;
		constexpr auto SetAsLastSibling = 0x1f7e150;
		constexpr auto GetSiblingIndex = 0x1f7d290;
		constexpr auto FindRelativeTransformWithPath = 0x1f7d060;
		constexpr auto Find = 0x1f7d0c0;
		constexpr auto get_lossyScale = 0x1f7ed40;
		constexpr auto IsChildOf = 0x1f7d5d0;
		constexpr auto get_hasChanged = 0x1f7e990;
		constexpr auto set_hasChanged = 0x1f7f380;
		constexpr auto GetEnumerator = 0x1f7d1a0;
		constexpr auto GetChild = 0x1f7d160;
		constexpr auto get_position_Injected = 0x1f7ed90;
		constexpr auto set_position_Injected = 0x1f7f710;
		constexpr auto get_localPosition_Injected = 0x1f7ea60;
		constexpr auto set_localPosition_Injected = 0x1f7f480;
		constexpr auto get_rotation_Injected = 0x1f7ef80;
		constexpr auto set_rotation_Injected = 0x1f7f900;
		constexpr auto get_localRotation_Injected = 0x1f7eb00;
		constexpr auto set_localRotation_Injected = 0x1f7f520;
		constexpr auto get_localScale_Injected = 0x1f7eba0;
		constexpr auto set_localScale_Injected = 0x1f7f5c0;
		constexpr auto get_worldToLocalMatrix_Injected = 0x1f7f170;
		constexpr auto get_localToWorldMatrix_Injected = 0x1f7ec40;
		constexpr auto SetPositionAndRotation_Injected = 0x1f7e240;
		constexpr auto RotateAroundInternal_Injected = 0x1f7d900;
		constexpr auto Internal_LookAt_Injected = 0x1f7d2d0;
		constexpr auto TransformDirection_Injected = 0x1f7e300;
		constexpr auto InverseTransformDirection_Injected = 0x1f7d390;
		constexpr auto TransformVector_Injected = 0x1f7e480;
		constexpr auto InverseTransformVector_Injected = 0x1f7d510;
		constexpr auto TransformPoint_Injected = 0x1f7e3c0;
		constexpr auto InverseTransformPoint_Injected = 0x1f7d450;
		constexpr auto get_lossyScale_Injected = 0x1f7ecf0;
	};

	namespace GameTrace {

		constexpr auto TraceAll = 0xbef600;
		constexpr auto Trace = 0xbefef0;
	};

	namespace HitTest {
		constexpr auto type = 0x10;
		constexpr auto AttackRay = 0x14;
		constexpr auto Radius = 0x2c;
		constexpr auto Forgiveness = 0x30;
		constexpr auto MaxDistance = 0x34;
		constexpr auto RayHit = 0x38;
		constexpr auto MultiHit = 0x64;
		constexpr auto BestHit = 0x65;
		constexpr auto DidHit = 0x66;
		constexpr auto damageProperties = 0x68;
		constexpr auto gameObject = 0x70;
		constexpr auto collider = 0x78;
		constexpr auto ignoreEntity = 0x80;
		constexpr auto HitEntity = 0x88;
		constexpr auto HitPoint = 0x90;
		constexpr auto HitNormal = 0x9c;
		constexpr auto HitDistance = 0xa8;
		constexpr auto HitTransform = 0xb0;
		constexpr auto HitPart = 0xb8;
		constexpr auto HitMaterial = 0xc0;

		constexpr auto HitPointWorld = 0x7a9830;
		constexpr auto HitNormalWorld = 0x7a9710;
		constexpr auto BuildAttackMessage = 0x7a8e80;
		constexpr auto Clear = 0x7a9630;
		constexpr auto ctor = 0x315d90;
	};

	namespace UnityEngine_Quaternion {
		constexpr auto x = 0x10;
		constexpr auto y = 0x14;
		constexpr auto z = 0x18;
		constexpr auto w = 0x1c;

		constexpr auto FromToRotation = 0x17b97b0;
		constexpr auto Inverse = 0x17b9b30;
		constexpr auto Slerp = 0x17ba5b0;
		constexpr auto SlerpUnclamped = 0x17ba490;
		constexpr auto Lerp = 0x17b9d60;
		constexpr auto LerpUnclamped = 0x17b9c40;
		constexpr auto Internal_FromEulerRad = 0x17b98a0;
		constexpr auto Internal_ToEulerRad = 0x17b9a50;
		constexpr auto AngleAxis = 0x17b9190;
		constexpr auto LookRotation = 0x17b9fc0;
		constexpr auto ctor = 0x10c300;
		constexpr auto get_identity = 0x17baab0;
		constexpr auto op_Multiply = 0x17baed0;
		constexpr auto IsEqualUsingDot = 0x17b9bc0;
		constexpr auto op_Equality = 0x17bab20;
		constexpr auto op_Inequality = 0x17babe0;
		constexpr auto Dot = 0x17b9350;
		constexpr auto SetLookRotation = 0x208e30;
		constexpr auto Angle = 0x17b9230;
		constexpr auto Internal_MakePositive = 0x17b9930;
		constexpr auto get_eulerAngles = 0x208f50;
		constexpr auto Euler = 0x17b9480;
		constexpr auto RotateTowards = 0x17ba060;
		constexpr auto GetHashCode = 0x208dc0;
		constexpr auto Equals = 0x208ce0;
		constexpr auto ToString = 0x208f40;
		constexpr auto cctor = 0x17ba8a0;
		constexpr auto FromToRotation_Injected = 0x17b9750;
		constexpr auto Inverse_Injected = 0x17b9ae0;
		constexpr auto Slerp_Injected = 0x17ba540;
		constexpr auto SlerpUnclamped_Injected = 0x17ba420;
		constexpr auto Lerp_Injected = 0x17b9cf0;
		constexpr auto LerpUnclamped_Injected = 0x17b9bd0;
		constexpr auto Internal_FromEulerRad_Injected = 0x17b9850;
		constexpr auto Internal_ToEulerRad_Injected = 0x17b9a00;
		constexpr auto AngleAxis_Injected = 0x17b9130;
		constexpr auto LookRotation_Injected = 0x17b9e10;
	};

	namespace GamePhysics {
		constexpr auto colBuffer = 0x8;

		constexpr auto CheckSphere = 0x5bb2d0;
		constexpr auto CheckCapsule = 0x5bb020;
		constexpr auto CheckOBB = 0x5bb1a0;
		constexpr auto CheckBounds = 0x5baec0;
		constexpr auto OverlapSphere = 0x5bc3f0;
		constexpr auto OverlapCapsule = 0x5bc170;
		constexpr auto OverlapOBB = 0x5bc2a0;
		constexpr auto OverlapBounds = 0x5bbfd0;
		constexpr auto BufferToList = 0x5bad20;
		constexpr auto Trace = 0x5bca70;
		constexpr auto TraceAll = 0x5bc9a0;
		constexpr auto TraceAllUnordered = 0x5bc6d0;
		constexpr auto LineOfSight = 0x5bb940;
		constexpr auto LineOfSightInternal = 0x5bb4a0;
		constexpr auto Verify = 0x5bcc70;
		constexpr auto HandleTerrainCollision = 0x5bb390;
		constexpr auto Sort = 0x5bc5d0;
		constexpr auto cctor = 0x5bcf80;
	};

	namespace WaterLevel {

		constexpr auto Factor = 0x851000;
		constexpr auto Test = 0x852850;
		constexpr auto GetWaterDepth = 0x851890;
		constexpr auto GetOverallWaterDepth = 0x851750;
		constexpr auto GetBuoyancyWaterInfo = 0x851280;
		constexpr auto GetWaterInfo = 0x852210;
		constexpr auto GetWaterInfoFromVolumes = 0x8519d0;
	};

	namespace System_Math {
		constexpr auto roundPower10Double = 0x8;

		constexpr auto Acos = 0x14c3650;
		constexpr auto Asin = 0x14c3660;
		constexpr auto Atan = 0x14c3680;
		constexpr auto Atan2 = 0x14c3670;
		constexpr auto Ceiling = 0x14c3690;
		constexpr auto Cos = 0x14c36a0;
		constexpr auto Cosh = 0x14c36b0;
		constexpr auto Floor = 0x14c36e0;
		constexpr auto InternalRound = 0x14c36f0;
		constexpr auto InternalTruncate = 0x14c3950;
		constexpr auto Sin = 0x14c43e0;
		constexpr auto Tan = 0x14c4420;
		constexpr auto Sinh = 0x14c43f0;
		constexpr auto Round = 0x14c40c0;
		constexpr auto SplitFractionDouble = 0x14c4400;
		constexpr auto Truncate = 0x14c4430;
		constexpr auto Sqrt = 0x14c4410;
		constexpr auto Log = 0x14c3b20;
		constexpr auto Log10 = 0x14c39b0;
		constexpr auto Exp = 0x14c36d0;
		constexpr auto Pow = 0x14c3f30;
		constexpr auto Abs = 0x14c3580;
		constexpr auto AbsHelper = 0x14c3420;
		constexpr auto Max = 0x14c3bd0;
		constexpr auto Min = 0x14c3f20;
		constexpr auto Sign = 0x14c43a0;
		constexpr auto DivRem = 0x14c36c0;
		constexpr auto cctor = 0x14c44e0;
	};

	namespace UnityEngine_Mathf {

		constexpr auto ClosestPowerOfTwo = 0x17aa090;
		constexpr auto IsPowerOfTwo = 0x17aa4b0;
		constexpr auto NextPowerOfTwo = 0x17aac20;
		constexpr auto GammaToLinearSpace = 0x17aa380;
		constexpr auto LinearToGammaSpace = 0x17aa710;
		constexpr auto FloatToHalf = 0x17aa280;
		constexpr auto HalfToFloat = 0x17aa3c0;
		constexpr auto PerlinNoise = 0x17aac60;
		constexpr auto Sin = 0x17aaeb0;
		constexpr auto Cos = 0x17aa0d0;
		constexpr auto Tan = 0x17ab390;
		constexpr auto Asin = 0x17a9e30;
		constexpr auto Acos = 0x17a9d20;
		constexpr auto Atan = 0x17a9f10;
		constexpr auto Atan2 = 0x17a9e90;
		constexpr auto Sqrt = 0x17ab330;
		constexpr auto Abs = 0x17a9cc0;
		constexpr auto Min = 0x17aa8c0;
		constexpr auto Max = 0x17aa890;
		constexpr auto Pow = 0x17aacb0;
		constexpr auto Exp = 0x17aa220;
		constexpr auto Log = 0x17aa810;
		constexpr auto Log10 = 0x17aa750;
		constexpr auto Ceil = 0x17a9fd0;
		constexpr auto Floor = 0x17aa320;
		constexpr auto Round = 0x17aae30;
		constexpr auto CeilToInt = 0x17a9f70;
		constexpr auto FloorToInt = 0x17aa2c0;
		constexpr auto RoundToInt = 0x17aadd0;
		constexpr auto Sign = 0x17aae90;
		constexpr auto Clamp = 0x17aa050;
		constexpr auto Clamp01 = 0x17aa030;
		constexpr auto Lerp = 0x17aa670;
		constexpr auto LerpUnclamped = 0x17aa650;
		constexpr auto LerpAngle = 0x17aa4f0;
		constexpr auto MoveTowards = 0x17aab30;
		constexpr auto MoveTowardsAngle = 0x17aa8d0;
		constexpr auto SmoothStep = 0x17ab270;
		constexpr auto Approximately = 0x17a9d80;
		constexpr auto SmoothDamp = 0x17ab0a0;
		constexpr auto Repeat = 0x17aad30;
		constexpr auto InverseLerp = 0x17aa400;
		constexpr auto DeltaAngle = 0x17aa130;
		constexpr auto cctor = 0x17ab3f0;
	};

	namespace Door {
		constexpr auto __menuOption_Menu_CloseDoor = 0x250;
		constexpr auto __menuOption_Menu_KnockDoor = 0x2a8;
		constexpr auto __menuOption_Menu_OpenDoor = 0x300;
		constexpr auto __menuOption_Menu_ToggleHatch = 0x358;
		constexpr auto knockEffect = 0x3b0;
		constexpr auto canTakeLock = 0x3b8;
		constexpr auto hasHatch = 0x3b9;
		constexpr auto canTakeCloser = 0x3ba;
		constexpr auto canTakeKnocker = 0x3bb;
		constexpr auto canNpcOpen = 0x3bc;
		constexpr auto canHandOpen = 0x3bd;
		constexpr auto isSecurityDoor = 0x3be;
		constexpr auto vehiclePhysBoxes = 0x3c0;
		constexpr auto checkPhysBoxesOnOpen = 0x3c8;
		constexpr auto vehicleCollisionSfx = 0x3d0;
		constexpr auto closeHash = 0x4;

		constexpr auto GetMenuOptions = 0x91ff10;
		constexpr auto get_HasMenuOptions = 0x921460;
		constexpr auto OnRpcMessage = 0x920db0;
		constexpr auto ResetState = 0x921200;
		constexpr auto HasSlot = 0x9208e0;
		constexpr auto CanPickup = 0x91fda0;
		constexpr auto Menu_OpenDoor = 0x920a90;
		constexpr auto Menu_OpenDoor_ShowIf = 0x920a50;
		constexpr auto Menu_CloseDoor = 0x920960;
		constexpr auto Menu_CloseDoor_ShowIf = 0x920920;
		constexpr auto Menu_KnockDoor = 0x920a10;
		constexpr auto Menu_KnockDoor_ShowIf = 0x9209a0;
		constexpr auto Menu_ToggleHatch = 0x920ae0;
		constexpr auto Menu_ToggleHatch_ShowIf = 0x920ad0;
		constexpr auto NeedsCrosshair = 0x2e9440;
		constexpr auto OnDoorInterrupted = 0x920b20;
		constexpr auto ReverseDoorAnimation = 0x921210;
		constexpr auto BoundsPadding = 0x2e8dd0;
		constexpr auto OnObjects = 0x2e7760;
		constexpr auto OnEmpty = 0x2e7760;
		constexpr auto ctor = 0x921440;
		constexpr auto cctor = 0x9213d0;
	};

	namespace UnityEngine_Object {
		constexpr auto m_CachedPtr = 0x10;

		constexpr auto GetInstanceID = 0x17b3e70;
		constexpr auto GetHashCode = 0x17b3e60;
		constexpr auto Equals = 0x17b3a80;
		constexpr auto op_Implicit = 0x17b4e70;
		constexpr auto CompareBaseObjects = 0x17b3790;
		constexpr auto IsNativeObjectAlive = 0x17b4ac0;
		constexpr auto GetCachedPtr = 0x178e430;
		constexpr auto get_name = 0x17b4c90;
		constexpr auto set_name = 0x17b50f0;
		constexpr auto Instantiate = 0x17b4650;
		constexpr auto Destroy = 0x17b3980;
		constexpr auto DestroyImmediate = 0x17b3930;
		constexpr auto FindObjectsOfType = 0x17b3e20;
		constexpr auto DontDestroyOnLoad = 0x17b3a40;
		constexpr auto get_hideFlags = 0x17b4c50;
		constexpr auto set_hideFlags = 0x17b50b0;
		constexpr auto CheckNullArgument = 0x17b3720;
		constexpr auto FindObjectOfType = 0x17b3d90;
		constexpr auto ToString = 0x17b4b60;
		constexpr auto op_Equality = 0x17b4d00;
		constexpr auto op_Inequality = 0x17b4f40;
		constexpr auto GetOffsetOfInstanceIDInCPlusPlusObject = 0x17b3fe0;
		constexpr auto Internal_CloneSingle = 0x17b4990;
		constexpr auto Internal_CloneSingleWithParent = 0x17b4930;
		constexpr auto Internal_InstantiateSingle = 0x17b4a30;
		constexpr auto GetName = 0x17b3fa0;
		constexpr auto SetName = 0x17b4b10;
		constexpr auto FindObjectFromInstanceID = 0x17b3d50;
		constexpr auto ctor = 0x315d90;
		constexpr auto cctor = 0x17b4c10;
		constexpr auto Internal_InstantiateSingle_Injected = 0x17b49d0;
	};

	namespace BaseMelee {
		constexpr auto canThrowAsProjectile = 0x260;
		constexpr auto canAiHearIt = 0x261;
		constexpr auto onlyThrowAsProjectile = 0x262;
		constexpr auto damageProperties = 0x268;
		constexpr auto damageTypes = 0x270;
		constexpr auto maxDistance = 0x278;
		constexpr auto attackRadius = 0x27c;
		constexpr auto isAutomatic = 0x280;
		constexpr auto blockSprintOnAttack = 0x281;
		constexpr auto strikeFX = 0x288;
		constexpr auto useStandardHitEffects = 0x290;
		constexpr auto aiStrikeDelay = 0x294;
		constexpr auto swingEffect = 0x298;
		constexpr auto materialStrikeFX = 0x2a0;
		constexpr auto heartStress = 0x2a8;
		constexpr auto gathering = 0x2b0;
		constexpr auto throwReady = 0x2b8;

		constexpr auto OnRpcMessage = 0x2ea870;
		constexpr auto GetInheritedVelocity = 0x2ea2c0;
		constexpr auto DoThrow = 0x2e9a90;
		constexpr auto CreateProjectile = 0x2e9450;
		constexpr auto GetAttackStats = 0x2ea230;
		constexpr auto DoAttackShared = 0x2e9600;
		constexpr auto OnInput = 0x2ea490;
		constexpr auto get_CanAttack = 0x2e9440;
		constexpr auto get_CanThrow = 0x2e9440;
		constexpr auto ClientAttack = 0x2e7760;
		constexpr auto OnHolstered = 0x2ea470;
		constexpr auto ProcessAttack = 0x2eaa20;
		constexpr auto DoAttack = 0x2e9850;
		constexpr auto DoViewmodelImpact = 0x2ea1a0;
		constexpr auto OnViewmodelEvent = 0x2ea960;
		constexpr auto GetGatherInfoFromIndex = 0x2ea290;
		constexpr auto CanHit = 0x2e9440;
		constexpr auto TotalDamage = 0x2eacb0;
		constexpr auto CanBeUsedInWater = 0x2e9440;
		constexpr auto GetStrikeEffectPath = 0x2ea310;
		constexpr auto ctor = 0x2eae10;
	};

	namespace ItemModProjectile {
		constexpr auto projectileObject = 0x18;
		constexpr auto mods = 0x20;
		constexpr auto ammoType = 0x28;
		constexpr auto numProjectiles = 0x2c;
		constexpr auto projectileSpread = 0x30;
		constexpr auto projectileVelocity = 0x34;
		constexpr auto projectileVelocitySpread = 0x38;
		constexpr auto useCurve = 0x3c;
		constexpr auto spreadScalar = 0x40;
		constexpr auto attackEffectOverride = 0x48;
		constexpr auto barrelConditionLoss = 0x50;
		constexpr auto category = 0x58;

		constexpr auto GetRandomVelocity = 0x817af0;
		constexpr auto GetSpreadScalar = 0x817b30;
		constexpr auto GetIndexedSpreadScalar = 0x817a60;
		constexpr auto GetAverageVelocity = 0x817a50;
		constexpr auto GetMinVelocity = 0x817ae0;
		constexpr auto GetMaxVelocity = 0x817ad0;
		constexpr auto IsAmmo = 0x817b90;
		constexpr auto ServerProjectileHit = 0x817ba0;
		constexpr auto ctor = 0x817c70;
	};

	namespace RecoilProperties {
		constexpr auto recoilYawMin = 0x18;
		constexpr auto recoilYawMax = 0x1c;
		constexpr auto recoilPitchMin = 0x20;
		constexpr auto recoilPitchMax = 0x24;
		constexpr auto timeToTakeMin = 0x28;
		constexpr auto timeToTakeMax = 0x2c;
		constexpr auto ADSScale = 0x30;
		constexpr auto movementPenalty = 0x34;
		constexpr auto clampPitch = 0x38;
		constexpr auto pitchCurve = 0x40;
		constexpr auto yawCurve = 0x48;
		constexpr auto useCurves = 0x50;
		constexpr auto shotsUntilMax = 0x54;

		constexpr auto ctor = 0x450460;
	};

	namespace ItemDefinition {
		constexpr auto itemid = 0x18;
		constexpr auto shortname = 0x20;
		constexpr auto displayName = 0x28;
		constexpr auto displayDescription = 0x30;
		constexpr auto iconSprite = 0x38;
		constexpr auto category = 0x40;
		constexpr auto selectionPanel = 0x44;
		constexpr auto maxDraggable = 0x48;
		constexpr auto itemType = 0x4c;
		constexpr auto amountType = 0x50;
		constexpr auto occupySlots = 0x54;
		constexpr auto stackable = 0x58;
		constexpr auto quickDespawn = 0x5c;
		constexpr auto rarity = 0x60;
		constexpr auto spawnAsBlueprint = 0x64;
		constexpr auto inventorySelectSound = 0x68;
		constexpr auto inventoryGrabSound = 0x70;
		constexpr auto inventoryDropSound = 0x78;
		constexpr auto physImpactSoundDef = 0x80;
		constexpr auto condition = 0x88;
		constexpr auto hidden = 0xa0;
		constexpr auto flags = 0xa4;
		constexpr auto steamItem = 0xa8;
		constexpr auto steamDlc = 0xb0;
		constexpr auto Parent = 0xb8;
		constexpr auto worldModelPrefab = 0xc0;
		constexpr auto isRedirectOf = 0xc8;
		constexpr auto redirectVendingBehaviour = 0xd0;
		constexpr auto itemMods = 0xd8;
		constexpr auto Traits = 0xe0;
		constexpr auto skins = 0xe8;
		constexpr auto _skins2 = 0xf0;
		constexpr auto panel = 0xf8;
		constexpr auto ItemModWearablek__BackingField = 0x100;
		constexpr auto isHoldablek__BackingField = 0x108;
		constexpr auto isUsablek__BackingField = 0x109;
		constexpr auto CraftableWithSkink__BackingField = 0x10a;
		constexpr auto Children = 0x110;

		constexpr auto get_skins2 = 0x80f140;
		constexpr auto InvalidateWorkshopSkinCache = 0x80eea0;
		constexpr auto get_Blueprint = 0x80efb0;
		constexpr auto get_craftingStackable = 0x80f070;
		constexpr auto HasFlag = 0x80ec20;
		constexpr auto Initialize = 0x80ec30;
		constexpr auto GetDisplayName = 0x80eb20;
		constexpr auto GetDescriptionText = 0x80ea80;
		constexpr auto FindIconSprite = 0x80e7b0;
		constexpr auto get_isWearable = 0x80f0e0;
		constexpr auto get_ItemModWearable = 0x80f060;
		constexpr auto set_ItemModWearable = 0x80f350;
		constexpr auto get_isHoldable = 0x585fa0;
		constexpr auto set_isHoldable = 0x586250;
		constexpr auto get_isUsable = 0x80f0d0;
		constexpr auto set_isUsable = 0x80f360;
		constexpr auto get_HasSkins = 0x80f000;
		constexpr auto get_CraftableWithSkin = 0x80eff0;
		constexpr auto set_CraftableWithSkin = 0x80f340;
		constexpr auto ctor = 0x80ef40;
		constexpr auto Initializeb__45_0 = 0x80eec0;
	};

	namespace PlayerInput {
		constexpr auto state = 0x20;
		constexpr auto hadInputBuffer = 0x28;
		constexpr auto bodyRotation = 0x2c;
		constexpr auto bodyAngles = 0x3c;
		constexpr auto headRotation = 0x48;
		constexpr auto headAngles = 0x58;
		constexpr auto recoilAngles = 0x64;
		constexpr auto viewDelta = 0x70;
		constexpr auto headLerp = 0x78;
		constexpr auto mouseWheelUp = 0x7c;
		constexpr auto mouseWheelDn = 0x80;
		constexpr auto offsetAngles = 0x84;
		constexpr auto ignoredButtons = 0x90;
		constexpr auto hasKeyFocus = 0x94;

		constexpr auto OnDisable = 0xabc890;
		constexpr auto FrameUpdate = 0xabbeb0;
		constexpr auto Flip = 0xabbd50;
		constexpr auto AdjustMouseMovement = 0xaba560;
		constexpr auto UpdateViewAngles = 0xabca30;
		constexpr auto ApplyViewAngles = 0xaba760;
		constexpr auto SetViewVars = 0xabc910;
		constexpr auto FinalizeRecoil = 0xabbb80;
		constexpr auto ClientAngles = 0xabbb50;
		constexpr auto ClientLookVars = 0xabbb60;
		constexpr auto HeadAngles = 0x9096e0;
		constexpr auto HeadLookVars = 0xabc0d0;
		constexpr auto ModifyInputState = 0xabc800;
		constexpr auto IsButtonDownNative = 0xabc3f0;
		constexpr auto BuildInputState = 0xabb270;
		constexpr auto UpdateButton = 0xabc9a0;
		constexpr auto IgnoreCurrentButtons = 0xabc0f0;
		constexpr auto get_hasOnlyPartialKeyInput = 0xabcd20;
		constexpr auto get_hasNoKeyInput = 0xabcb90;
		constexpr auto UpdateKeyFocus = 0xabca10;
		constexpr auto IgnoreCurrentKeys = 0xabc200;
		constexpr auto ctor = 0xabcb20;
	};

	namespace PlayerModel {
		constexpr auto pm_downlimit = 0x4;
		constexpr auto pm_upspine = 0x8;
		constexpr auto pm_downspine = 0xc;
		constexpr auto pm_lookoffset = 0x10;
		constexpr auto pm_anglesmoothspeed = 0x1c;
		constexpr auto pm_nohold = 0x20;
		constexpr auto pm_ladder = 0x24;
		constexpr auto pm_minweight = 0x28;
		constexpr auto _smoothAimWeight = 0x18;
		constexpr auto _smoothVelocity = 0x1c;
		constexpr auto _smoothlookAngle = 0x20;
		constexpr auto smoothLookDir = 0x2c;
		constexpr auto Shoulders = 0x38;
		constexpr auto LegParts = 0x40;
		constexpr auto fakeSpineBones = 0x48;
		constexpr auto extraLeanBack = 0x50;
		constexpr auto drawState = 0x54;
		constexpr auto speed = 0x2c;
		constexpr auto acceleration = 0x30;
		constexpr auto rotationYaw = 0x34;
		constexpr auto forward = 0x38;
		constexpr auto right = 0x3c;
		constexpr auto up = 0x40;
		constexpr auto ducked = 0x44;
		constexpr auto grounded = 0x48;
		constexpr auto waterlevel = 0x4c;
		constexpr auto attack = 0x50;
		constexpr auto attack_alt = 0x54;
		constexpr auto deploy = 0x58;
		constexpr auto reload = 0x5c;
		constexpr auto throwWeapon = 0x60;
		constexpr auto holster = 0x64;
		constexpr auto aiming = 0x68;
		constexpr auto onLadder = 0x6c;
		constexpr auto posing = 0x70;
		constexpr auto poseType = 0x74;
		constexpr auto relaxGunPose = 0x78;
		constexpr auto vehicle_aim_yaw = 0x7c;
		constexpr auto vehicle_aim_speed = 0x80;
		constexpr auto onPhone = 0x84;
		constexpr auto leftFootIK = 0x88;
		constexpr auto rightFootIK = 0x8c;
		constexpr auto vehicleSteering = 0x90;
		constexpr auto collision = 0x58;
		constexpr auto censorshipCube = 0x60;
		constexpr auto censorshipCubeBreasts = 0x68;
		constexpr auto jawBone = 0x70;
		constexpr auto neckBone = 0x78;
		constexpr auto headBone = 0x80;
		constexpr auto eyeController = 0x88;
		constexpr auto SpineBones = 0x90;
		constexpr auto leftFootBone = 0x98;
		constexpr auto rightFootBone = 0xa0;
		constexpr auto leftHandPropBone = 0xa8;
		constexpr auto rightHandPropBone = 0xb0;
		constexpr auto rightHandTarget = 0xb8;
		constexpr auto leftHandTargetPosition = 0xc4;
		constexpr auto leftHandTargetRotation = 0xd0;
		constexpr auto rightHandTargetPosition = 0xe0;
		constexpr auto rightHandTargetRotation = 0xec;
		constexpr auto steeringTargetDegrees = 0xfc;
		constexpr auto rightFootTargetPosition = 0x100;
		constexpr auto rightFootTargetRotation = 0x10c;
		constexpr auto leftFootTargetPosition = 0x11c;
		constexpr auto leftFootTargetRotation = 0x128;
		constexpr auto CinematicAnimationController = 0x138;
		constexpr auto DefaultHoldType = 0x140;
		constexpr auto SleepGesture = 0x148;
		constexpr auto WoundedGesture = 0x150;
		constexpr auto CurrentGesture = 0x158;
		constexpr auto MaleSkin = 0x160;
		constexpr auto FemaleSkin = 0x168;
		constexpr auto subsurfaceProfile = 0x170;
		constexpr auto voiceVolume = 0x178;
		constexpr auto skinColor = 0x17c;
		constexpr auto skinNumber = 0x180;
		constexpr auto meshNumber = 0x184;
		constexpr auto hairNumber = 0x188;
		constexpr auto skinType = 0x18c;
		constexpr auto movementSounds = 0x190;
		constexpr auto showSash = 0x198;
		constexpr auto tempPoseType = 0x19c;
		constexpr auto underwearSkin = 0x1a0;
		constexpr auto overrideSkinSeedk__BackingField = 0x1a8;
		constexpr auto AimAnglesk__BackingField = 0x1b0;
		constexpr auto LookAnglesk__BackingField = 0x1c0;
		constexpr auto modelState = 0x1d0;
		constexpr auto position = 0x1d8;
		constexpr auto velocity = 0x1e4;
		constexpr auto speedOverride = 0x1f0;
		constexpr auto newVelocity = 0x1fc;
		constexpr auto rotation = 0x208;
		constexpr auto mountedRotation = 0x218;
		constexpr auto smoothLeftFootIK = 0x228;
		constexpr auto smoothRightFootIK = 0x234;
		constexpr auto drawShadowOnly = 0x240;
		constexpr auto isIncapacitated = 0x241;
		constexpr auto flinchLocation = 0x244;
		constexpr auto visible = 0x248;
		constexpr auto nameTag = 0x250;
		constexpr auto animatorNeedsWarmup = 0x258;
		constexpr auto isLocalPlayer = 0x259;
		constexpr auto aimSoundDef = 0x260;
		constexpr auto aimEndSoundDef = 0x268;
		constexpr auto InGesture = 0x270;
		constexpr auto InCinematic = 0x271;
		constexpr auto defaultAnimatorController = 0x278;
		constexpr auto _multiMesh = 0x280;
		constexpr auto _animator = 0x288;
		constexpr auto _lodGroup = 0x290;
		constexpr auto _currentGesture = 0x298;
		constexpr auto holdTypeLock = 0x2a0;
		constexpr auto wasMountedRightAim = 0x2a4;
		constexpr auto cachedMask = 0x2a8;
		constexpr auto cachedConstructionMask = 0x2ac;
		constexpr auto WorkshopHeldEntity = 0x2b0;
		constexpr auto mountedSpineLookWeight = 0x2b8;
		constexpr auto mountedAnimSpeed = 0x2bc;
		constexpr auto IsNpck__BackingField = 0x2c0;
		constexpr auto timeSinceLeftFootTest = 0x2c4;
		constexpr auto cachedLeftFootPos = 0x2c8;
		constexpr auto cachedLeftFootNormal = 0x2d4;
		constexpr auto timeSinceRightFootTest = 0x2e0;
		constexpr auto cachedRightFootPos = 0x2e4;
		constexpr auto cachedRightFootNormal = 0x2f0;

		constexpr auto SpineIk = 0xac8870;
		constexpr auto ParentArmsToCamera = 0xac6d30;
		constexpr auto OnAnimatorIK = 0xac64c0;
		constexpr auto HandIK = 0xac52a0;
		constexpr auto FootIK = 0xac1fa0;
		constexpr auto HeadIK = 0xac5700;
		constexpr auto get_ShouldDoLegs = 0xacd410;
		constexpr auto get_ShouldShowHands = 0xacd490;
		constexpr auto ClearLegs = 0xac1270;
		constexpr auto RebuildLegs = 0xac7740;
		constexpr auto InitializeLegSpineBones = 0xac5ad0;
		constexpr auto UpdateLegsBeforeRender = 0xac9df0;
		constexpr auto AddLegRenderer = 0xac0940;
		constexpr auto SwapLegBone = 0xac9160;
		constexpr auto GetFlat = 0xac4710;
		constexpr auto RebuildAll = 0xac72c0;
		constexpr auto get_overrideSkinSeed = 0xacd740;
		constexpr auto set_overrideSkinSeed = 0xacd780;
		constexpr auto get_IsFemale = 0xacd3d0;
		constexpr auto get_SkinSet = 0xacd540;
		constexpr auto get_AimAngles = 0xacd3c0;
		constexpr auto set_AimAngles = 0xacd750;
		constexpr auto get_LookAngles = 0xacd400;
		constexpr auto set_LookAngles = 0xacd770;
		constexpr auto get_IsFirstPerson = 0xacd3e0;
		constexpr auto get_IsNpc = 0x8a2fc0;
		constexpr auto set_IsNpc = 0xacd760;
		constexpr auto get_multiMesh = 0xacd6a0;
		constexpr auto get_animator = 0xacd560;
		constexpr auto get_lodGroup = 0xacd600;
		constexpr auto GetTargetVelocity = 0xac5140;
		constexpr auto Awake = 0xac11d0;
		constexpr auto OnEnable = 0xac6810;
		constexpr auto OnDisable = 0xac65f0;
		constexpr auto UpdateMultiMesh = 0xacae10;
		constexpr auto UpdateCensorship = 0xac9550;
		constexpr auto UpdateCollider = 0xac99d0;
		constexpr auto UpdateModelState = 0xacadc0;
		constexpr auto UpdatePosition = 0xacb660;
		constexpr auto UpdateRotation = 0xacb780;
		constexpr auto UpdateLocalVelocity = 0xacacf0;
		constexpr auto UpdateVelocity = 0xacc020;
		constexpr auto UpdateParameters = 0xacaf10;
		constexpr auto UpdateFrom = 0xac9bb0;
		constexpr auto UpdateGlobalShaderConstants = 0xac9c60;
		constexpr auto LateCycle = 0xac5f30;
		constexpr auto FrameUpdate = 0xac4190;
		constexpr auto FrameUpdate_Default = 0xac3830;
		constexpr auto FrameUpdate_Sleeping = 0xac3f40;
		constexpr auto FrameUpdate_Incapacitated = 0xac3a10;
		constexpr auto FrameUpdate_OnLadder = 0xac3ca0;
		constexpr auto GetAim360 = 0xac44a0;
		constexpr auto UpdateVehicleAim360 = 0xacbbc0;
		constexpr auto DoAimingSounds = 0xac1d60;
		constexpr auto SetAimSounds = 0xac8160;
		constexpr auto SetMountedLookAtWeight = 0xac8720;
		constexpr auto SetMountedAnimationSpeed = 0xac8710;
		constexpr auto UpdateLocalPlayerPosition = 0xaca9a0;
		constexpr auto Attack = 0xac1150;
		constexpr auto AltAttack = 0xac0e10;
		constexpr auto Deploy = 0xac1cb0;
		constexpr auto Reload = 0xac7ee0;
		constexpr auto Holster = 0xac5a50;
		constexpr auto Flinch = 0xac1f40;
		constexpr auto Throw = 0xac9340;
		constexpr auto Gesture = 0xac4360;
		constexpr auto AnimatorWarmup = 0xac0ec0;
		constexpr auto AlwaysAnimate = 0xac0e90;
		constexpr auto SetHoldType = 0xac8390;
		constexpr auto FadeOutGestureLayer = 0xac1ea0;
		constexpr auto SetGesture = 0xac81a0;
		constexpr auto StopGesture = 0xac9060;
		constexpr auto PlayCinematic = 0xac71a0;
		constexpr auto StopCinematic = 0xac9020;
		constexpr auto SetSpeedOverride = 0xac8850;
		constexpr auto GetReplacementUnderwear = 0xac5080;
		constexpr auto RemoveUnderwearParts = 0xac8030;
		constexpr auto Clear = 0xac13d0;
		constexpr auto Rebuild = 0xac79d0;
		constexpr auto AddPart = 0xac0c70;
		constexpr auto RemovePart = 0xac7f60;
		constexpr auto HasPart = 0xac5640;
		constexpr auto IsBarefoot = 0xac5ea0;
		constexpr auto GetSkinColor = 0xac50c0;
		constexpr auto SetSkinProperties = 0xac8730;
		constexpr auto RefreshUnderwear = 0xac7b50;
		constexpr auto ForceModelSeed = 0xac3600;
		constexpr auto FindBone = 0xac1f10;
		constexpr auto GetBones = 0xac46e0;
		constexpr auto GetFootPlacement = 0xac4750;
		constexpr auto ApplyVisibility = 0xac0f20;
		constexpr auto ToggleUpdateOffscreen = 0xac93e0;
		constexpr auto OnParentDestroying = 0xac6c30;
		constexpr auto WorkshopPreviewSetup = 0xacc3b0;
		constexpr auto ctor = 0xacd210;
		constexpr auto cctor = 0xaccdc0;
	};

	namespace ProtoBuf_PlayerTeam {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto teamID = 0x18;
		constexpr auto teamName = 0x20;
		constexpr auto teamLeader = 0x28;
		constexpr auto members = 0x30;
		constexpr auto teamLifetime = 0x38;
		constexpr auto mapNote = 0x40;

		constexpr auto ResetToPool = 0x1c7d3b0;
		constexpr auto Dispose = 0x1c7cfb0;
		constexpr auto EnterPool = 0xa00570;
		constexpr auto LeavePool = 0xa005a0;
		constexpr auto CopyTo = 0x1c7b4c0;
		constexpr auto Copy = 0x1c7b700;
		constexpr auto Deserialize = 0x1c7c4b0;
		constexpr auto DeserializeLengthDelimited = 0x1c7b780;
		constexpr auto DeserializeLength = 0x1c7bc30;
		constexpr auto FromProto = 0x1c7d030;
		constexpr auto WriteToStream = 0x1c7e270;
		constexpr auto WriteToStreamDelta = 0x1c7e290;
		constexpr auto ReadFromStream = 0x1c7d390;
		constexpr auto SerializeDelta = 0x1c7d860;
		constexpr auto Serialize = 0x1c7de80;
		constexpr auto ToProtoBytes = 0x1c7e260;
		constexpr auto ToProto = 0x1c7e270;
		constexpr auto SerializeToBytes = 0x1c7dd70;
		constexpr auto SerializeLengthDelimited = 0x1c7dcc0;
		constexpr auto ctor = 0xa00d40;
	};

	namespace PlayerInventory {
		constexpr auto containerMain = 0x20;
		constexpr auto containerBelt = 0x28;
		constexpr auto containerWear = 0x30;
		constexpr auto crafting = 0x38;
		constexpr auto loot = 0x40;

		constexpr auto OnRpcMessage = 0xabda80;
		constexpr auto Initialize = 0xabd700;
		constexpr auto DoDestroy = 0xabcfb0;
		constexpr auto ClientInit = 0xabcf30;
		constexpr auto UpdatedItemContainer = 0xabded0;
		constexpr auto FindItemUID = 0xabd520;
		constexpr auto FindItemID = 0xabd240;
		constexpr auto FindItemIDs = 0xabd430;
		constexpr auto FindContainer = 0xabd090;
		constexpr auto GetContainer = 0xabd680;
		constexpr auto Load = 0xabd930;
		constexpr auto GetAmount = 0xabd600;
		constexpr auto AllItems = 0xabce60;
		constexpr auto AllItemsNoAlloc = 0xabcd90;
		constexpr auto FindAmmo = 0xabd040;
		constexpr auto HasAmmo = 0xabd6a0;
		constexpr auto ctor = 0xabe0c0;
	};

	namespace ItemContainer {
		constexpr auto flags = 0x10;
		constexpr auto allowedContents = 0x14;
		constexpr auto onlyAllowedItem = 0x18;
		constexpr auto availableSlots = 0x20;
		constexpr auto capacity = 0x28;
		constexpr auto uid = 0x2c;
		constexpr auto dirty = 0x30;
		constexpr auto itemList = 0x38;
		constexpr auto temperature = 0x40;
		constexpr auto parent = 0x48;
		constexpr auto playerOwner = 0x50;
		constexpr auto entityOwner = 0x58;
		constexpr auto isServer = 0x60;
		constexpr auto maxStackSize = 0x64;

		constexpr auto HasFlag = 0x80d060;
		constexpr auto SetFlag = 0x80df20;
		constexpr auto IsLocked = 0x80d230;
		constexpr auto PlayerItemInputBlocked = 0x80dc50;
		constexpr auto OnChanged = 0x80dbb0;
		constexpr auto ClientInitialize = 0x80c3a0;
		constexpr auto FindItemByUID = 0x80c7d0;
		constexpr auto IsFull = 0x80d1e0;
		constexpr auto IsEmpty = 0x80d1a0;
		constexpr auto CanTake = 0x80c270;
		constexpr auto GetMaxTransferAmount = 0x80cd10;
		constexpr auto Insert = 0x80d070;
		constexpr auto SlotTaken = 0x80df40;
		constexpr auto GetSlot = 0x80cec0;
		constexpr auto FindPosition = 0x80cb00;
		constexpr auto Clear = 0x80c2c0;
		constexpr auto Kill = 0x80d240;
		constexpr auto GetAmount = 0x80cb90;
		constexpr auto FindItemByItemID = 0x80c660;
		constexpr auto FindItemsByItemName = 0x80c960;
		constexpr auto FindItemsByItemID = 0x80c8b0;
		constexpr auto Save = 0x80dc60;
		constexpr auto Load = 0x80d500;
		constexpr auto GetOwnerPlayer = 0x46c100;
		constexpr auto FindAmmo = 0x80c4b0;
		constexpr auto HasAmmo = 0x80cf90;
		constexpr auto ContentsHash = 0x80c3e0;
		constexpr auto FindContainer = 0x80c570;
		constexpr auto CanAcceptItem = 0x80be20;
		constexpr auto ctor = 0x80df60;
	};

	namespace Item {
		constexpr auto amountOverride = 0x10;
		constexpr auto _condition = 0x18;
		constexpr auto _maxCondition = 0x1c;
		constexpr auto info = 0x20;
		constexpr auto uid = 0x28;
		constexpr auto dirty = 0x2c;
		constexpr auto amount = 0x30;
		constexpr auto position = 0x34;
		constexpr auto busyTime = 0x38;
		constexpr auto removeTime = 0x3c;
		constexpr auto fuel = 0x40;
		constexpr auto isServer = 0x44;
		constexpr auto instanceData = 0x48;
		constexpr auto skin = 0x50;
		constexpr auto name = 0x58;
		constexpr auto text = 0x60;
		constexpr auto OnDirty = 0x68;
		constexpr auto flags = 0x70;
		constexpr auto contents = 0x78;
		constexpr auto parent = 0x80;
		constexpr auto worldEnt = 0x88;
		constexpr auto heldEntity = 0x98;

		constexpr auto UpdateAmountDisplay = 0x81b730;
		constexpr auto FormatAmount = 0x81a310;
		constexpr auto set_condition = 0x81c6e0;
		constexpr auto get_condition = 0x6bdb10;
		constexpr auto set_maxCondition = 0x81c760;
		constexpr auto get_maxCondition = 0x6bdaf0;
		constexpr auto get_maxConditionNormalized = 0x81c490;
		constexpr auto get_conditionNormalized = 0x81c020;
		constexpr auto set_conditionNormalized = 0x81c640;
		constexpr auto get_hasCondition = 0x81c120;
		constexpr auto get_isBroken = 0x81c360;
		constexpr auto get_despawnMultiplier = 0x81c060;
		constexpr auto get_blueprintTargetDef = 0x81bff0;
		constexpr auto get_blueprintTarget = 0x81c010;
		constexpr auto set_blueprintTarget = 0x81c5b0;
		constexpr auto get_blueprintAmount = 0x81bfe0;
		constexpr auto set_blueprintAmount = 0x81c5a0;
		constexpr auto IsBlueprint = 0x81a720;
		constexpr auto add_OnDirty = 0x81bf20;
		constexpr auto remove_OnDirty = 0x81c500;
		constexpr auto HasFlag = 0x81a710;
		constexpr auto SetFlag = 0x81b230;
		constexpr auto IsOn = 0x81a950;
		constexpr auto IsOnFire = 0x81a940;
		constexpr auto IsCooking = 0x81a900;
		constexpr auto IsLocked = 0x81a910;
		constexpr auto get_parentItem = 0x81c4c0;
		constexpr auto MarkDirty = 0x81ad80;
		constexpr auto OnChanged = 0x81ae70;
		constexpr auto CollectedForCrafting = 0x2e7760;
		constexpr auto ReturnedFromCancelledCraft = 0x2e7760;
		constexpr auto IsChildContainer = 0x81a770;
		constexpr auto IsBusy = 0x81a740;
		constexpr auto BusyFor = 0x819eb0;
		constexpr auto Remove = 0x81b020;
		constexpr auto DoRemove = 0x81a080;
		constexpr auto SwitchOnOff = 0x81b3c0;
		constexpr auto LockUnlock = 0x81ad00;
		constexpr auto get_temperature = 0x81c4e0;
		constexpr auto GetOwnerPlayer = 0x81a520;
		constexpr auto CanBeHeld = 0x819ee0;
		constexpr auto CanStack = 0x819f20;
		constexpr auto IsValid = 0x81a960;
		constexpr auto SetWorldEntity = 0x81b250;
		constexpr auto OnMovedToWorld = 0x81af90;
		constexpr auto GetWorldEntity = 0x81a5d0;
		constexpr auto GetHeldEntity = 0x81a500;
		constexpr auto BeltBarSelect = 0x819e10;
		constexpr auto GetTotalUISlots = 0x81a540;
		constexpr auto GetFilledUISlots = 0x81a470;
		constexpr auto HasAmmo = 0x81a5f0;
		constexpr auto FindAmmo = 0x81a0d0;
		constexpr auto ToString = 0x81b440;
		constexpr auto FindItem = 0x81a200;
		constexpr auto MaxStackable = 0x81ade0;
		constexpr auto get_iconSprite = 0x81c1c0;
		constexpr auto get_isLoadingIconSprite = 0x81c390;
		constexpr auto get_Traits = 0x81bfc0;
		constexpr auto Save = 0x81b080;
		constexpr auto Load = 0x81a970;
		constexpr auto ctor = 0x81bf00;
		constexpr auto cctor = 0x81be30;
		constexpr auto get_iconSpriteb__93_0 = 0x81b720;
		constexpr auto get_isLoadingIconSpriteb__95_0 = 0x81b720;
	};

	namespace Model {
		constexpr auto collision = 0x18;
		constexpr auto rootBone = 0x20;
		constexpr auto headBone = 0x28;
		constexpr auto eyeBone = 0x30;
		constexpr auto animator = 0x38;
		constexpr auto skeleton = 0x40;
		constexpr auto boneTransforms = 0x48;
		constexpr auto boneNames = 0x50;
		constexpr auto boneDict = 0x58;
		constexpr auto skin = 0x60;
		constexpr auto _lodGroup = 0x68;

		constexpr auto OnEnable = 0x6bd080;
		constexpr auto BuildBoneDictionary = 0x6bc830;
		constexpr auto GetSkin = 0x3e96b0;
		constexpr auto FindBoneInternal = 0x6bc8e0;
		constexpr auto FindBone = 0x6bc970;
		constexpr auto GetBones = 0x6bcb80;
		constexpr auto FindClosestBone = 0x6bc9e0;
		constexpr auto get_lodGroup = 0x6bd870;
		constexpr auto OnDisable = 0x6bcf50;
		constexpr auto SyncBones = 0x6bd450;
		constexpr auto Trigger = 0x6bd7c0;
		constexpr auto GetTransform = 0x6bcbb0;
		constexpr auto ApplyVisibility = 0x6bc6a0;
		constexpr auto PreProcess = 0x6bd090;
		constexpr auto ctor = 0x2e02e0;
	};

	namespace MedicalTool {
		constexpr auto healDurationSelf = 0x260;
		constexpr auto healDurationOther = 0x264;
		constexpr auto maxDistanceOther = 0x268;
		constexpr auto canUseOnOther = 0x26c;
		constexpr auto canRevive = 0x26d;
		constexpr auto useTarget = 0x270;
		constexpr auto resetTime = 0x278;

		constexpr auto OnRpcMessage = 0x712cf0;
		constexpr auto GetTarget = 0x7125f0;
		constexpr auto AnyPressed = 0x712520;
		constexpr auto OnInput = 0x7129a0;
		constexpr auto OnViewmodelEvent = 0x7130c0;
		constexpr auto Reset = 0x713210;
		constexpr auto OnDeploy = 0x712940;
		constexpr auto OnHolstered = 0x712970;
		constexpr auto ctor = 0x713230;
	};

	namespace HeldEntity {
		constexpr auto _punches = 0x148;
		constexpr auto punchAdded = 0x150;
		constexpr auto lastPunchTime = 0x15c;
		constexpr auto worldModelAnimator = 0x160;
		constexpr auto thirdPersonDeploySound = 0x168;
		constexpr auto thirdPersonAimSound = 0x170;
		constexpr auto thirdPersonAimEndSound = 0x178;
		constexpr auto viewModel = 0x180;
		constexpr auto isDeployed = 0x188;
		constexpr auto nextExamineTime = 0x18c;
		constexpr auto handBone = 0x190;
		constexpr auto HoldAnimationOverride = 0x198;
		constexpr auto toolType = 0x1a0;
		constexpr auto isBuildingTool = 0x1a1;
		constexpr auto hostileScore = 0x1a4;
		constexpr auto holsterInfo = 0x1a8;
		constexpr auto HeldCameraMode = 0x1b0;
		constexpr auto FirstPersonArmOffset = 0x1b4;
		constexpr auto FirstPersonArmRotation = 0x1c0;
		constexpr auto FirstPersonRotationStrength = 0x1cc;
		constexpr auto ownerItemUID = 0x1d0;

		constexpr auto OnRpcMessage = 0x7a4330;
		constexpr auto AddPunch = 0x7a36b0;
		constexpr auto CL_Punch = 0x7a3780;
		constexpr auto DoRecoilCompensation = 0x2e7760;
		constexpr auto SimPunches = 0x7a49d0;
		constexpr auto ClientInit = 0x7a3830;
		constexpr auto GetFovOverride = 0x7a3a60;
		constexpr auto DoNetworkDestroy = 0x7a3900;
		constexpr auto PostLateClientCycle = 0x2e7760;
		constexpr auto PostNetworkUpdate = 0x7a47e0;
		constexpr auto UpdateHolsteredOffset = 0x7a4eb0;
		constexpr auto EditViewAngles = 0x2e7760;
		constexpr auto ClampPitch = 0x2e7760;
		constexpr auto OnFrame = 0x7a41a0;
		constexpr auto OnInput = 0x2e7760;
		constexpr auto Examine = 0x7a3940;
		constexpr auto OnDeploy = 0x7a3f80;
		constexpr auto OnDeployed = 0x7a4190;
		constexpr auto OnHolster = 0x7a41c0;
		constexpr auto OnHolstered = 0x7a4320;
		constexpr auto OnViewmodelEvent = 0x2e7760;
		constexpr auto OnReliableEvent = 0x2e7760;
		constexpr auto ModifyCamera = 0x2e7760;
		constexpr auto ShouldDestroyImmediately = 0x2e9440;
		constexpr auto UpdatePlayerModel = 0x7a56b0;
		constexpr auto ProcessPlayerModel = 0x2e7760;
		constexpr auto GetHoldAnimations = 0x7a3c50;
		constexpr auto GetMovementMultiplier = 0x2eecf0;
		constexpr auto OnSpawnedForWorkshopPreview = 0x2e7760;
		constexpr auto get_hostile = 0x7a5860;
		constexpr auto LightsOn = 0x2ed5b0;
		constexpr auto IsDeployed = 0x5aca20;
		constexpr auto GetOwnerPlayer = 0x7a3e60;
		constexpr auto GetOwnerConnection = 0x7a3c70;
		constexpr auto CanBeUsedInWater = 0x2e6930;
		constexpr auto GetOwnerItem = 0x7a3d80;
		constexpr auto GetItem = 0x7a3c60;
		constexpr auto GetOwnerItemDefinition = 0x7a3d00;
		constexpr auto Load = 0x7a3f20;
		constexpr auto ctor = 0x7a5770;
		constexpr auto cctor = 0x7a5730;
	};

	namespace UnityEngine_GUIContent {
		constexpr auto m_Text = 0x10;
		constexpr auto m_Image = 0x18;
		constexpr auto m_Tooltip = 0x20;
		constexpr auto s_Image = 0x8;
		constexpr auto s_TextImage = 0x10;
		constexpr auto none = 0x18;

		constexpr auto get_text = 0x178e430;
		constexpr auto set_text = 0x579d70;
		constexpr auto set_image = 0x3ed8b0;
		constexpr auto get_tooltip = 0x18b9fa0;
		constexpr auto set_tooltip = 0x2f0890;
		constexpr auto ctor = 0x18b9f10;
		constexpr auto Temp = 0x18b97f0;
		constexpr auto ClearStaticCache = 0x18b9690;
		constexpr auto cctor = 0x18b9ac0;
	};

	namespace BaseCombatEntity {
		constexpr auto __menuOption_Menu_Pickup = 0x148;
		constexpr auto skeletonProperties = 0x1a0;
		constexpr auto baseProtection = 0x1a8;
		constexpr auto startHealth = 0x1b0;
		constexpr auto pickup = 0x1b8;
		constexpr auto repair = 0x1d8;
		constexpr auto ShowHealthInfo = 0x200;
		constexpr auto lifestate = 0x204;
		constexpr auto sendsHitNotification = 0x208;
		constexpr auto sendsMeleeHitNotification = 0x209;
		constexpr auto markAttackerHostile = 0x20a;
		constexpr auto diesAtZeroHealth = 0x20b;
		constexpr auto _health = 0x20c;
		constexpr auto _maxHealth = 0x210;
		constexpr auto faction = 0x214;
		constexpr auto deathTime = 0x218;
		constexpr auto lastNotifyFrame = 0x21c;

		constexpr auto GetMenuOptions = 0x3a9740;
		constexpr auto get_HasMenuOptions = 0x3aa890;
		constexpr auto OnRpcMessage = 0x3a9e50;
		constexpr auto HitNotify = 0x3a9aa0;
		constexpr auto ClientInit = 0x3a91c0;
		constexpr auto DisplayHealthInfo = 0x3a92c0;
		constexpr auto GetEyeTransform = 0x3a9620;
		constexpr auto OnLifeStateChanged = 0x3a9e20;
		constexpr auto GetPickupCount = 0x3a9a80;
		constexpr auto CanPickup = 0x3a9120;
		constexpr auto OnPickedUp = 0x2e7760;
		constexpr auto Menu_Pickup = 0x3a9cf0;
		constexpr auto Menu_Pickup_TimeStart = 0x3a9ca0;
		constexpr auto Menu_Pickup_If = 0x3a9c80;
		constexpr auto BuildCost = 0x3a9050;
		constexpr auto IsDead = 0x3a9bc0;
		constexpr auto IsAlive = 0x3a9bb0;
		constexpr auto GetFaction = 0x3a9730;
		constexpr auto IsFriendly = 0x2e6930;
		constexpr auto get_SecondsSinceDeath = 0x3aa950;
		constexpr auto get_healthFraction = 0x3aa970;
		constexpr auto ResetState = 0x3aa400;
		constexpr auto DestroyShared = 0x3a92a0;
		constexpr auto GetThreatLevel = 0x2eea80;
		constexpr auto PenetrationResistance = 0x3aa370;
		constexpr auto ScaleDamage = 0x3aa500;
		constexpr auto SkeletonLookup = 0x3aa640;
		constexpr auto Load = 0x3a9bd0;
		constexpr auto get_health = 0x3a9a90;
		constexpr auto set_health = 0x3aa9c0;
		constexpr auto Health = 0x3a9a90;
		constexpr auto MaxHealth = 0x3a9c70;
		constexpr auto StartHealth = 0x3aa6f0;
		constexpr auto StartMaxHealth = 0x3aa700;
		constexpr auto SetMaxHealth = 0x3aa5b0;
		constexpr auto DoHitNotify = 0x3a92d0;
		constexpr auto OnAttacked = 0x3a9d30;
		constexpr auto ctor = 0x3aa720;
	};

	namespace InputState {
		constexpr auto current = 0x10;
		constexpr auto previous = 0x18;
		constexpr auto SwallowedButtons = 0x20;

		constexpr auto IsDown = 0x57d210;
		constexpr auto WasDown = 0x57d2e0;
		constexpr auto WasJustPressed = 0x57d300;
		constexpr auto WasJustReleased = 0x57d340;
		constexpr auto SwallowButton = 0x57d2d0;
		constexpr auto AimAngle = 0x57d050;
		constexpr auto MouseDelta = 0x57d240;
		constexpr auto Flip = 0x57d140;
		constexpr auto Clear = 0x57d110;
		constexpr auto ctor = 0x57d380;
	};

	namespace InputMessage {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto buttons = 0x14;
		constexpr auto aimAngles = 0x18;
		constexpr auto mouseDelta = 0x24;

		constexpr auto ResetToPool = 0x1c222b0;
		constexpr auto Dispose = 0x1c21fb0;
		constexpr auto EnterPool = 0xa00570;
		constexpr auto LeavePool = 0xa005a0;
		constexpr auto CopyTo = 0x1c21010;
		constexpr auto Copy = 0x1c21050;
		constexpr auto Deserialize = 0x1c216e0;
		constexpr auto DeserializeLengthDelimited = 0x1c21370;
		constexpr auto DeserializeLength = 0x1c213f0;
		constexpr auto FromProto = 0x1c22030;
		constexpr auto WriteToStream = 0x1c22b80;
		constexpr auto WriteToStreamDelta = 0x1c22ba0;
		constexpr auto ReadFromStream = 0x1c221f0;
		constexpr auto SerializeDelta = 0x1c22350;
		constexpr auto Serialize = 0x1c22910;
		constexpr auto ToProtoBytes = 0x1c22b70;
		constexpr auto ToProto = 0x1c22b80;
		constexpr auto SerializeToBytes = 0x1c22800;
		constexpr auto SerializeLengthDelimited = 0x1c22750;
		constexpr auto ctor = 0xa00d40;
	};

	namespace BaseMountable {
		constexpr auto __menuOption_Menu_Mount = 0x220;
		constexpr auto _mounted = 0x278;
		constexpr auto eyeOverride = 0x280;
		constexpr auto pitchClamp = 0x288;
		constexpr auto yawClamp = 0x290;
		constexpr auto canWieldItems = 0x298;
		constexpr auto relativeViewAngles = 0x299;
		constexpr auto mountPose = 0x29c;
		constexpr auto maxMountDistance = 0x2a0;
		constexpr auto mountAnchor = 0x2a8;
		constexpr auto dismountAnchor = 0x2b0;
		constexpr auto dismountPositions = 0x2b8;
		constexpr auto checkPlayerLosOnMount = 0x2c0;
		constexpr auto disableMeshCullingForPlayers = 0x2c1;
		constexpr auto modifiesPlayerCollider = 0x2c2;
		constexpr auto customPlayerCollider = 0x2c4;
		constexpr auto mountSoundDef = 0x2d8;
		constexpr auto swapSoundDef = 0x2e0;
		constexpr auto dismountSoundDef = 0x2e8;
		constexpr auto mountTimeStatType = 0x2f0;
		constexpr auto MountedCameraMode = 0x2f4;
		constexpr auto isMobile = 0x2f8;
		constexpr auto SideLeanAmount = 0x2fc;

		constexpr auto GetMenuOptions = 0x2ee6f0;
		constexpr auto get_HasMenuOptions = 0x2f0480;
		constexpr auto OnRpcMessage = 0x2ef2d0;
		constexpr auto CanHoldItems = 0x2ee0f0;
		constexpr auto GetMountedCameraMode = 0x2eeae0;
		constexpr auto DirectlyMountable = 0x2e9440;
		constexpr auto GetEyeOverride = 0x2ee660;
		constexpr auto GetMountedBodyAngles = 0x2eea90;
		constexpr auto ModifiesThirdPersonCamera = 0x2e6930;
		constexpr auto GetPitchClamp = 0x2eecd0;
		constexpr auto GetYawClamp = 0x2eed00;
		constexpr auto EyePositionForPlayer = 0x2ee2f0;
		constexpr auto WaterFactorForPlayer = 0x2f0340;
		constexpr auto MaxVelocity = 0x2eed90;
		constexpr auto GetMounted = 0x2eecc0;
		constexpr auto OnClientInput = 0x2e7760;
		constexpr auto ForceUpdatePlayerModel = 0x2e6930;
		constexpr auto UpdatePlayerModel = 0x2efd50;
		constexpr auto ProcessPlayerModel = 0x2e7760;
		constexpr auto SuppressHandsAnimationLayer = 0x2e6930;
		constexpr auto GetAnimationOverride = 0x2e1bf0;
		constexpr auto GetSpineLookAtWeight = 0x2eecf0;
		constexpr auto GetMountedAnimationSpeed = 0x2eea80;
		constexpr auto ModifyThirdPersonEyeOffset = 0x2eef50;
		constexpr auto LockThirdPersonOffset = 0x2eed20;
		constexpr auto VehicleParent = 0x2f02b0;
		constexpr auto UpdatePlayerRotation = 0x2f0200;
		constexpr auto SetNetworkPosition = 0x2efd20;
		constexpr auto UpdatePlayerPosition = 0x2f0070;
		constexpr auto GetMountedRotation = 0x2eebb0;
		constexpr auto GetMountedPosition = 0x2eeaf0;
		constexpr auto PlayerMounted = 0x2ef8e0;
		constexpr auto PlayerDismounted = 0x2ef3f0;
		constexpr auto ClientOnPlayerDismounted = 0x2e7760;
		constexpr auto ClientOnPlayerMounted = 0x2ee100;
		constexpr auto OverrideViewAngles = 0x2ef3c0;
		constexpr auto DoPlayerMovement = 0x2ee220;
		constexpr auto Menu_Mount = 0x2eeee0;
		constexpr auto Menu_Mount_ShowIf = 0x2eee40;
		constexpr auto MountMenuVisible = 0x2e9440;
		constexpr auto NearMountPoint = 0x2eef70;
		constexpr auto ConvertVector = 0x2ee150;
		constexpr auto get_CanDrinkWhileMounted = 0x2e9440;
		constexpr auto get_BlocksDoors = 0x2e9440;
		constexpr auto ctor = 0x2f03e0;
	};

	namespace TOD_Sky {
		constexpr auto probeRenderID = 0x18;
		constexpr auto ColorSpace = 0x1c;
		constexpr auto ColorRange = 0x20;
		constexpr auto ColorOutput = 0x24;
		constexpr auto SkyQuality = 0x28;
		constexpr auto CloudQuality = 0x2c;
		constexpr auto MeshQuality = 0x30;
		constexpr auto StarQuality = 0x34;
		constexpr auto Cycle = 0x38;
		constexpr auto World = 0x40;
		constexpr auto Atmosphere = 0x48;
		constexpr auto Day = 0x50;
		constexpr auto Night = 0x58;
		constexpr auto Sun = 0x60;
		constexpr auto Moon = 0x68;
		constexpr auto Stars = 0x70;
		constexpr auto Clouds = 0x78;
		constexpr auto Light = 0x80;
		constexpr auto Fog = 0x88;
		constexpr auto Ambient = 0x90;
		constexpr auto Reflection = 0x98;
		constexpr auto Initializedk__BackingField = 0xa0;
		constexpr auto Componentsk__BackingField = 0xa8;
		constexpr auto Resourcesk__BackingField = 0xb0;
		constexpr auto IsDayk__BackingField = 0xb8;
		constexpr auto IsNightk__BackingField = 0xb9;
		constexpr auto LerpValuek__BackingField = 0xbc;
		constexpr auto SunZenithk__BackingField = 0xc0;
		constexpr auto SunAltitudek__BackingField = 0xc4;
		constexpr auto SunAzimuthk__BackingField = 0xc8;
		constexpr auto MoonZenithk__BackingField = 0xcc;
		constexpr auto MoonAltitudek__BackingField = 0xd0;
		constexpr auto MoonAzimuthk__BackingField = 0xd4;
		constexpr auto SunsetTimek__BackingField = 0xd8;
		constexpr auto SunriseTimek__BackingField = 0xdc;
		constexpr auto LocalSiderealTimek__BackingField = 0xe0;
		constexpr auto SunVisibilityk__BackingField = 0xe4;
		constexpr auto MoonVisibilityk__BackingField = 0xe8;
		constexpr auto SunDirectionk__BackingField = 0xec;
		constexpr auto MoonDirectionk__BackingField = 0xf8;
		constexpr auto LightDirectionk__BackingField = 0x104;
		constexpr auto LocalSunDirectionk__BackingField = 0x110;
		constexpr auto LocalMoonDirectionk__BackingField = 0x11c;
		constexpr auto LocalLightDirectionk__BackingField = 0x128;
		constexpr auto SunLightColork__BackingField = 0x134;
		constexpr auto MoonLightColork__BackingField = 0x144;
		constexpr auto SunRayColork__BackingField = 0x154;
		constexpr auto MoonRayColork__BackingField = 0x164;
		constexpr auto SunSkyColork__BackingField = 0x174;
		constexpr auto MoonSkyColork__BackingField = 0x184;
		constexpr auto SunMeshColork__BackingField = 0x194;
		constexpr auto MoonMeshColork__BackingField = 0x1a4;
		constexpr auto SunCloudColork__BackingField = 0x1b4;
		constexpr auto MoonCloudColork__BackingField = 0x1c4;
		constexpr auto FogColork__BackingField = 0x1d4;
		constexpr auto GroundColork__BackingField = 0x1e4;
		constexpr auto AmbientColork__BackingField = 0x1f4;
		constexpr auto MoonHaloColork__BackingField = 0x204;
		constexpr auto Probek__BackingField = 0x218;
		constexpr auto ProbeInstancek__BackingField = 0x220;
		constexpr auto ProbeExk__BackingField = 0x228;
		constexpr auto timeSinceLightUpdate = 0x230;
		constexpr auto timeSinceAmbientUpdate = 0x234;
		constexpr auto timeSinceReflectionUpdate = 0x238;
		constexpr auto kBetaMie = 0x23c;
		constexpr auto kSun = 0x248;
		constexpr auto k4PI = 0x258;
		constexpr auto kRadius = 0x268;
		constexpr auto kScale = 0x278;

		constexpr auto get_Instances = 0xc3e350;
		constexpr auto get_Instance = 0xc3e280;
		constexpr auto get_Initialized = 0xb12130;
		constexpr auto set_Initialized = 0xb12140;
		constexpr auto get_Headless = 0xc3e260;
		constexpr auto get_Components = 0x8dda50;
		constexpr auto set_Components = 0xa820e0;
		constexpr auto get_Resources = 0x701d00;
		constexpr auto set_Resources = 0xc32040;
		constexpr auto get_IsDay = 0xc3e3b0;
		constexpr auto set_IsDay = 0xc3e780;
		constexpr auto get_IsNight = 0xc3e3c0;
		constexpr auto set_IsNight = 0xc3e790;
		constexpr auto get_Radius = 0xc3e650;
		constexpr auto get_Diameter = 0xc3e200;
		constexpr auto get_LerpValue = 0x806a10;
		constexpr auto set_LerpValue = 0x806be0;
		constexpr auto get_SunZenith = 0xc3e720;
		constexpr auto set_SunZenith = 0xc3e9b0;
		constexpr auto get_SunAltitude = 0xc3e690;
		constexpr auto set_SunAltitude = 0xc3e910;
		constexpr auto get_SunAzimuth = 0xc3e6a0;
		constexpr auto set_SunAzimuth = 0xc3e920;
		constexpr auto get_MoonZenith = 0xc3e610;
		constexpr auto set_MoonZenith = 0xc3e8e0;
		constexpr auto get_MoonAltitude = 0xc3e560;
		constexpr auto set_MoonAltitude = 0xc3e830;
		constexpr auto get_MoonAzimuth = 0xc3e570;
		constexpr auto set_MoonAzimuth = 0xc3e840;
		constexpr auto get_SunsetTime = 0xc3e740;
		constexpr auto set_SunsetTime = 0xc3e9d0;
		constexpr auto get_SunriseTime = 0xc3e730;
		constexpr auto set_SunriseTime = 0xc3e9c0;
		constexpr auto get_LocalSiderealTime = 0xc3e530;
		constexpr auto set_LocalSiderealTime = 0xc3e800;
		constexpr auto get_LightZenith = 0xc3e470;
		constexpr auto get_LightIntensity = 0xc3e440;
		constexpr auto get_SunVisibility = 0xc3e710;
		constexpr auto set_SunVisibility = 0xc3e9a0;
		constexpr auto get_MoonVisibility = 0xc3e600;
		constexpr auto set_MoonVisibility = 0xc3e8d0;
		constexpr auto get_SunDirection = 0xc3e6b0;
		constexpr auto set_SunDirection = 0xc3e940;
		constexpr auto get_MoonDirection = 0xc3e590;
		constexpr auto set_MoonDirection = 0xc3e860;
		constexpr auto get_LightDirection = 0xc3e420;
		constexpr auto set_LightDirection = 0xc3e7a0;
		constexpr auto get_LocalSunDirection = 0xc3e540;
		constexpr auto set_LocalSunDirection = 0xc3e810;
		constexpr auto get_LocalMoonDirection = 0xc3e510;
		constexpr auto set_LocalMoonDirection = 0xc3e7e0;
		constexpr auto get_LocalLightDirection = 0xc3e4f0;
		constexpr auto set_LocalLightDirection = 0xc3e7c0;
		constexpr auto get_SunLightColor = 0xc3e6d0;
		constexpr auto set_SunLightColor = 0xc3e960;
		constexpr auto get_MoonLightColor = 0xc3e5c0;
		constexpr auto set_MoonLightColor = 0xc3e890;
		constexpr auto get_LightColor = 0xc3e3d0;
		constexpr auto get_SunRayColor = 0xc3e6f0;
		constexpr auto set_SunRayColor = 0xc3e980;
		constexpr auto get_MoonRayColor = 0xc3e5e0;
		constexpr auto set_MoonRayColor = 0xc3e8b0;
		constexpr auto get_SunSkyColor = 0xc3e700;
		constexpr auto set_SunSkyColor = 0xc3e990;
		constexpr auto get_MoonSkyColor = 0xc3e5f0;
		constexpr auto set_MoonSkyColor = 0xc3e8c0;
		constexpr auto get_SunMeshColor = 0xc3e6e0;
		constexpr auto set_SunMeshColor = 0xc3e970;
		constexpr auto get_MoonMeshColor = 0xc3e5d0;
		constexpr auto set_MoonMeshColor = 0xc3e8a0;
		constexpr auto get_SunCloudColor = 0xa917c0;
		constexpr auto set_SunCloudColor = 0xc3e930;
		constexpr auto get_MoonCloudColor = 0xc3e580;
		constexpr auto set_MoonCloudColor = 0xc3e850;
		constexpr auto get_FogColor = 0xc3e240;
		constexpr auto set_FogColor = 0xc3e760;
		constexpr auto get_GroundColor = 0xc3e250;
		constexpr auto set_GroundColor = 0xc3e770;
		constexpr auto get_AmbientColor = 0xc3e1f0;
		constexpr auto set_AmbientColor = 0xc3e750;
		constexpr auto get_MoonHaloColor = 0xc3e5b0;
		constexpr auto set_MoonHaloColor = 0xc3e880;
		constexpr auto get_Probe = 0xc3e640;
		constexpr auto set_Probe = 0xc3e900;
		constexpr auto get_ProbeInstance = 0xc3e630;
		constexpr auto set_ProbeInstance = 0x9fe600;
		constexpr auto get_ProbeEx = 0xc3e620;
		constexpr auto set_ProbeEx = 0xc3e8f0;
		constexpr auto OrbitalToUnity = 0xc36f60;
		constexpr auto OrbitalToLocal = 0xc36ea0;
		constexpr auto SampleAtmosphere = 0xc37ff0;
		constexpr auto RenderToSphericalHarmonics = 0xc37e90;
		constexpr auto RenderToCubemap = 0xc37030;
		constexpr auto RenderToProbe = 0xc371f0;
		constexpr auto UpdateProbeProperties = 0xc3c050;
		constexpr auto SampleFogColor = 0xc38370;
		constexpr auto SampleSkyColor = 0xc38620;
		constexpr auto SampleEquatorColor = 0xc382b0;
		constexpr auto UpdateFog = 0xc3bfd0;
		constexpr auto UpdateAmbient = 0xc39c30;
		constexpr auto UpdateReflection = 0xc3cb60;
		constexpr auto LoadParameters = 0xc36b20;
		constexpr auto SaveParameters = 0xc38730;
		constexpr auto UpdateQualitySettings = 0xc3c550;
		constexpr auto UpdateRenderSettings = 0xc3cc60;
		constexpr auto UpdateShaderKeywords = 0xc3d010;
		constexpr auto UpdateShaderProperties = 0xc3d270;
		constexpr auto ShaderScale = 0xc38d90;
		constexpr auto ShaderMiePhase = 0xc38a70;
		constexpr auto ShaderRayleighPhase = 0xc38d70;
		constexpr auto ShaderNightSkyColor = 0xc38c80;
		constexpr auto ShaderMoonHaloColor = 0xc38b40;
		constexpr auto TOD_HDR2LDR = 0xc399e0;
		constexpr auto TOD_GAMMA2LINEAR = 0xc39980;
		constexpr auto TOD_LINEAR2GAMMA = 0xc39b60;
		constexpr auto ShaderScatteringColor = 0xc38e40;
		constexpr auto Initialize = 0xc36740;
		constexpr auto Cleanup = 0xc365d0;
		constexpr auto OnEnable = 0xc36e50;
		constexpr auto OnDisable = 0xc365d0;
		constexpr auto LateUpdate = 0xc36840;
		constexpr auto OnValidate = 0xc36e60;
		constexpr auto UpdateScattering = 0xc3ce60;
		constexpr auto UpdateCelestials = 0xc3a0d0;
		constexpr auto ctor = 0xc3e1a0;
		constexpr auto cctor = 0xc3e140;
	};

	namespace UnityEngine_Random {

		constexpr auto InitState = 0x17bb0c0;
		constexpr auto get_state = 0x17bb390;
		constexpr auto set_state = 0x17bb440;
		constexpr auto Range = 0x17bb140;
		constexpr auto RandomRangeInt = 0x17bb100;
		constexpr auto get_value = 0x17bb3d0;
		constexpr auto get_insideUnitSphere = 0x17bb210;
		constexpr auto GetRandomUnitCircle = 0x17bb080;
		constexpr auto get_insideUnitCircle = 0x17bb190;
		constexpr auto get_onUnitSphere = 0x17bb290;
		constexpr auto get_rotation = 0x17bb310;
		constexpr auto RandomRange = 0x17bb100;
		constexpr auto get_state_Injected = 0x17bb350;
		constexpr auto set_state_Injected = 0x17bb400;
		constexpr auto get_insideUnitSphere_Injected = 0x17bb1d0;
		constexpr auto get_onUnitSphere_Injected = 0x17bb250;
		constexpr auto get_rotation_Injected = 0x17bb2d0;
	};

	namespace UnityEngine_PhysicsScene {
		constexpr auto m_Handle = 0x10;

		constexpr auto ToString = 0x221890;
		constexpr auto GetHashCode = 0x1393c0;
		constexpr auto Equals = 0x221350;
		constexpr auto Raycast = 0x221620;
		constexpr auto Internal_RaycastTest = 0x2066de0;
		constexpr auto Internal_Raycast = 0x2066ec0;
		constexpr auto Internal_RaycastNonAlloc = 0x2066d00;
		constexpr auto Query_CapsuleCast = 0x20675f0;
		constexpr auto Internal_CapsuleCast = 0x2066ae0;
		constexpr auto CapsuleCast = 0x2212a0;
		constexpr auto OverlapCapsuleNonAlloc_Internal = 0x2067310;
		constexpr auto OverlapCapsule = 0x221480;
		constexpr auto Query_SphereCast = 0x2067700;
		constexpr auto Internal_SphereCast = 0x2067030;
		constexpr auto SphereCast = 0x221710;
		constexpr auto Internal_SphereCastNonAlloc = 0x2066fa0;
		constexpr auto OverlapSphereNonAlloc_Internal = 0x2067400;
		constexpr auto OverlapSphere = 0x221520;
		constexpr auto Query_BoxCast = 0x20674e0;
		constexpr auto Internal_BoxCast = 0x2066920;
		constexpr auto BoxCast = 0x2211e0;
		constexpr auto OverlapBoxNonAlloc_Internal = 0x2067220;
		constexpr auto OverlapBox = 0x2213d0;
		constexpr auto Internal_RaycastTest_Injected = 0x2066d70;
		constexpr auto Internal_Raycast_Injected = 0x2066e50;
		constexpr auto Internal_RaycastNonAlloc_Injected = 0x2066c90;
		constexpr auto Query_CapsuleCast_Injected = 0x2067580;
		constexpr auto OverlapCapsuleNonAlloc_Internal_Injected = 0x20672a0;
		constexpr auto Query_SphereCast_Injected = 0x2067690;
		constexpr auto Internal_SphereCastNonAlloc_Injected = 0x2066f30;
		constexpr auto OverlapSphereNonAlloc_Internal_Injected = 0x2067390;
		constexpr auto Query_BoxCast_Injected = 0x2067470;
		constexpr auto OverlapBoxNonAlloc_Internal_Injected = 0x20671b0;
	};

	namespace UnityEngine_GameObjectEx {

		constexpr auto ToBaseEntity = 0x426b50;
		constexpr auto IsOnLayer = 0x426a00;
		constexpr auto GetEntityFromRegistry = 0x4268d0;
		constexpr auto GetEntityFromComponent = 0x4267d0;
		constexpr auto SetHierarchyGroup = 0x426a90;
	};

	namespace BaseHelicopter {
		constexpr auto weakspots = 0x220;
		constexpr auto rotorPivot = 0x228;
		constexpr auto mainRotor = 0x230;
		constexpr auto mainRotor_blades = 0x238;
		constexpr auto mainRotor_blur = 0x240;
		constexpr auto tailRotor = 0x248;
		constexpr auto tailRotor_blades = 0x250;
		constexpr auto tailRotor_blur = 0x258;
		constexpr auto rocket_tube_left = 0x260;
		constexpr auto rocket_tube_right = 0x268;
		constexpr auto left_gun_yaw = 0x270;
		constexpr auto left_gun_pitch = 0x278;
		constexpr auto left_gun_muzzle = 0x280;
		constexpr auto right_gun_yaw = 0x288;
		constexpr auto right_gun_pitch = 0x290;
		constexpr auto right_gun_muzzle = 0x298;
		constexpr auto spotlight_rotation = 0x2a0;
		constexpr auto rocket_fire_effect = 0x2a8;
		constexpr auto gun_fire_effect = 0x2b0;
		constexpr auto bulletEffect = 0x2b8;
		constexpr auto explosionEffect = 0x2c0;
		constexpr auto fireBall = 0x2c8;
		constexpr auto crateToDrop = 0x2d0;
		constexpr auto maxCratesToSpawn = 0x2d8;
		constexpr auto bulletSpeed = 0x2dc;
		constexpr auto bulletDamage = 0x2e0;
		constexpr auto servergibs = 0x2e8;
		constexpr auto debrisFieldMarker = 0x2f0;
		constexpr auto rotorWashSoundDef = 0x2f8;
		constexpr auto _rotorWashSound = 0x300;
		constexpr auto flightEngineSoundDef = 0x308;
		constexpr auto flightThwopsSoundDef = 0x310;
		constexpr auto flightEngineSound = 0x318;
		constexpr auto flightThwopsSound = 0x320;
		constexpr auto flightEngineGainMod = 0x328;
		constexpr auto flightThwopsGainMod = 0x330;
		constexpr auto rotorGainModSmoothing = 0x338;
		constexpr auto engineGainMin = 0x33c;
		constexpr auto engineGainMax = 0x340;
		constexpr auto thwopGainMin = 0x344;
		constexpr auto thwopGainMax = 0x348;
		constexpr auto spotlightJitterAmount = 0x34c;
		constexpr auto spotlightJitterSpeed = 0x350;
		constexpr auto nightLights = 0x358;
		constexpr auto spotlightTarget = 0x360;
		constexpr auto engineSpeed = 0x36c;
		constexpr auto targetEngineSpeed = 0x370;
		constexpr auto blur_rotationScale = 0x374;
		constexpr auto _rotorWashParticles = 0x378;
		constexpr auto myAI = 0x380;
		constexpr auto client_rotorPivotIdeal = 0x388;
		constexpr auto nightLightsOn = 0x398;

		constexpr auto OnRpcMessage = 0x2e5130;
		constexpr auto InitalizeWeakspots = 0x2e4b80;
		constexpr auto MaxVelocity = 0x2e5120;
		constexpr auto InitShared = 0x2e4af0;
		constexpr auto Load = 0x2e4e60;
		constexpr auto ClientInit = 0x2e4510;
		constexpr auto InitializeClientsideEffects = 0x2e4c00;
		constexpr auto DoClientDestroy = 0x2e4530;
		constexpr auto SetLights = 0x2e5580;
		constexpr auto Update = 0x2e5ff0;
		constexpr auto UpdateEffects = 0x2e56a0;
		constexpr auto UpdateRotorWashPosition = 0x2e5eb0;
		constexpr auto ToggleRotorWash = 0x2e5620;
		constexpr auto UpdateRotorVisibility = 0x2e5e20;
		constexpr auto FireGun = 0x2e4610;
		constexpr auto ctor = 0x2e6750;
	};

	namespace HitInfo {
		constexpr auto Initiator = 0x10;
		constexpr auto WeaponPrefab = 0x18;
		constexpr auto Weapon = 0x20;
		constexpr auto DoHitEffects = 0x28;
		constexpr auto DoDecals = 0x29;
		constexpr auto IsPredicting = 0x2a;
		constexpr auto UseProtection = 0x2b;
		constexpr auto Predicted = 0x30;
		constexpr auto DidHit = 0x38;
		constexpr auto HitEntity = 0x40;
		constexpr auto HitBone = 0x48;
		constexpr auto HitPart = 0x4c;
		constexpr auto HitMaterial = 0x50;
		constexpr auto HitPositionWorld = 0x54;
		constexpr auto HitPositionLocal = 0x60;
		constexpr auto HitNormalWorld = 0x6c;
		constexpr auto HitNormalLocal = 0x78;
		constexpr auto PointStart = 0x84;
		constexpr auto PointEnd = 0x90;
		constexpr auto ProjectileID = 0x9c;
		constexpr auto ProjectileDistance = 0xa0;
		constexpr auto ProjectileVelocity = 0xa4;
		constexpr auto ProjectilePrefab = 0xb0;
		constexpr auto material = 0xb8;
		constexpr auto damageProperties = 0xc0;
		constexpr auto damageTypes = 0xc8;
		constexpr auto CanGather = 0xd0;
		constexpr auto DidGather = 0xd1;
		constexpr auto gatherScale = 0xd4;

		constexpr auto IsProjectile = 0x7a7e50;
		constexpr auto get_InitiatorPlayer = 0x7a86a0;
		constexpr auto get_attackNormal = 0x7a8730;
		constexpr auto get_hasDamage = 0x7a8c30;
		constexpr auto ctor = 0x7a84c0;
		constexpr auto LoadFromAttack = 0x7a7e60;
		constexpr auto get_isHeadshot = 0x7a8c60;
		constexpr auto get_bonePhrase = 0x7a8ad0;
		constexpr auto get_boneName = 0x7a8940;
		constexpr auto get_boneArea = 0x7a8830;
		constexpr auto PositionOnRay = 0x7a8060;
		constexpr auto HitPositionOnRay = 0x7a7cb0;
		constexpr auto IsNaNOrInfinity = 0x7a7d00;
	};

	namespace System_Number {

		constexpr auto NumberBufferToDecimal = 0x14ceeb0;
		constexpr auto NumberBufferToDouble = 0x14ceec0;
		constexpr auto FormatDecimal = 0x14ce3d0;
		constexpr auto FormatDouble = 0x14ce4f0;
		constexpr auto FormatInt32 = 0x14ce570;
		constexpr auto FormatUInt32 = 0x14ce8d0;
		constexpr auto FormatInt64 = 0x14ce6e0;
		constexpr auto FormatUInt64 = 0x14cea30;
		constexpr auto FormatSingle = 0x14ce850;
		constexpr auto HexNumberToInt32 = 0x14ceb90;
		constexpr auto HexNumberToInt64 = 0x14cec10;
		constexpr auto HexNumberToUInt32 = 0x14cecd0;
		constexpr auto HexNumberToUInt64 = 0x14ced50;
		constexpr auto IsWhite = 0x14cede0;
		constexpr auto NumberToInt32 = 0x14ceed0;
		constexpr auto NumberToInt64 = 0x14cef30;
		constexpr auto NumberToUInt32 = 0x14cefb0;
		constexpr auto NumberToUInt64 = 0x14cf010;
		constexpr auto MatchChars = 0x14cee40;
		constexpr auto ParseDecimal = 0x14cf080;
		constexpr auto ParseDouble = 0x14cf1f0;
		constexpr auto ParseInt32 = 0x14cf4a0;
		constexpr auto ParseInt64 = 0x14cf6f0;
		constexpr auto ParseNumber = 0x14cf960;
		constexpr auto ParseSingle = 0x14d0450;
		constexpr auto ParseUInt32 = 0x14d0770;
		constexpr auto ParseUInt64 = 0x14d09b0;
		constexpr auto StringToNumber = 0x14d0c10;
		constexpr auto TrailingZeros = 0x14d0d50;
		constexpr auto TryParseDecimal = 0x14d0db0;
		constexpr auto TryParseDouble = 0x14d0f30;
		constexpr auto TryParseInt32 = 0x14d10b0;
		constexpr auto TryParseInt64 = 0x14d12f0;
		constexpr auto TryParseSingle = 0x14d14c0;
		constexpr auto TryParseUInt32 = 0x14d1670;
		constexpr auto TryParseUInt64 = 0x14d18b0;
		constexpr auto TryStringToNumber = 0x14d1bd0;
	};

	namespace System_Globalization_NumberFormatInfo {
		constexpr auto numberGroupSizes = 0x10;
		constexpr auto currencyGroupSizes = 0x18;
		constexpr auto percentGroupSizes = 0x20;
		constexpr auto positiveSign = 0x28;
		constexpr auto negativeSign = 0x30;
		constexpr auto numberDecimalSeparator = 0x38;
		constexpr auto numberGroupSeparator = 0x40;
		constexpr auto currencyGroupSeparator = 0x48;
		constexpr auto currencyDecimalSeparator = 0x50;
		constexpr auto currencySymbol = 0x58;
		constexpr auto ansiCurrencySymbol = 0x60;
		constexpr auto nanSymbol = 0x68;
		constexpr auto positiveInfinitySymbol = 0x70;
		constexpr auto negativeInfinitySymbol = 0x78;
		constexpr auto percentDecimalSeparator = 0x80;
		constexpr auto percentGroupSeparator = 0x88;
		constexpr auto percentSymbol = 0x90;
		constexpr auto perMilleSymbol = 0x98;
		constexpr auto nativeDigits = 0xa0;
		constexpr auto m_dataItem = 0xa8;
		constexpr auto numberDecimalDigits = 0xac;
		constexpr auto currencyDecimalDigits = 0xb0;
		constexpr auto currencyPositivePattern = 0xb4;
		constexpr auto currencyNegativePattern = 0xb8;
		constexpr auto numberNegativePattern = 0xbc;
		constexpr auto percentPositivePattern = 0xc0;
		constexpr auto percentNegativePattern = 0xc4;
		constexpr auto percentDecimalDigits = 0xc8;
		constexpr auto digitSubstitution = 0xcc;
		constexpr auto isReadOnly = 0xd0;
		constexpr auto m_useUserOverride = 0xd1;
		constexpr auto m_isInvariant = 0xd2;
		constexpr auto validForParseAsNumber = 0xd3;
		constexpr auto validForParseAsCurrency = 0xd4;

		constexpr auto ctor = 0x11bfea0;
		constexpr auto OnSerializing = 0x11bf500;
		constexpr auto OnDeserializing = 0x2e7760;
		constexpr auto OnDeserialized = 0x2e7760;
		constexpr auto get_InvariantInfo = 0x11c0030;
		constexpr auto GetInstance = 0x11bf280;
		constexpr auto Clone = 0x11bf180;
		constexpr auto get_CurrencyDecimalDigits = 0x622f60;
		constexpr auto get_CurrencyDecimalSeparator = 0x46c100;
		constexpr auto get_IsReadOnly = 0xbed140;
		constexpr auto get_CurrencyGroupSizes = 0x11bfeb0;
		constexpr auto get_NumberGroupSizes = 0x11c0140;
		constexpr auto get_PercentGroupSizes = 0x11c01c0;
		constexpr auto get_CurrencyGroupSeparator = 0x806ad0;
		constexpr auto get_CurrencySymbol = 0x46c0f0;
		constexpr auto get_CurrentInfo = 0x11bff30;
		constexpr auto get_NaNSymbol = 0x3e96e0;
		constexpr auto get_CurrencyNegativePattern = 0xc356d0;
		constexpr auto get_NumberNegativePattern = 0xc356c0;
		constexpr auto get_PercentPositivePattern = 0xc356b0;
		constexpr auto get_PercentNegativePattern = 0x977250;
		constexpr auto get_NegativeInfinitySymbol = 0x3e96d0;
		constexpr auto get_NegativeSign = 0x579cc0;
		constexpr auto get_NumberDecimalDigits = 0xc35760;
		constexpr auto get_NumberDecimalSeparator = 0x57cbd0;
		constexpr auto get_NumberGroupSeparator = 0x5f3170;
		constexpr auto get_CurrencyPositivePattern = 0xc356a0;
		constexpr auto get_PositiveInfinitySymbol = 0x3ddf90;
		constexpr auto get_PositiveSign = 0x5fa980;
		constexpr auto get_PercentDecimalDigits = 0x977270;
		constexpr auto get_PercentDecimalSeparator = 0x395e50;
		constexpr auto get_PercentGroupSeparator = 0x3e9670;
		constexpr auto get_PercentSymbol = 0x3e9660;
		constexpr auto get_PerMilleSymbol = 0x3e9680;
		constexpr auto GetFormat = 0x11bf1f0;
		constexpr auto ReadOnly = 0x11bf590;
		constexpr auto ValidateParseStyleInteger = 0x11bf710;
		constexpr auto ValidateParseStyleFloatingPoint = 0x11bf640;
	};

	namespace UnityEngine_GL {

		constexpr auto Vertex3 = 0x179ae70;
		constexpr auto Vertex = 0x179aed0;
		constexpr auto TexCoord3 = 0x179ae10;
		constexpr auto TexCoord2 = 0x179adc0;
		constexpr auto MultiTexCoord3 = 0x179acf0;
		constexpr auto MultiTexCoord2 = 0x179ac90;
		constexpr auto ImmediateColor = 0x179a9d0;
		constexpr auto Color = 0x179a6d0;
		constexpr auto get_sRGBWrite = 0x179af30;
		constexpr auto set_sRGBWrite = 0x179af60;
		constexpr auto MultMatrix = 0x179ac50;
		constexpr auto PushMatrix = 0x179ad90;
		constexpr auto PopMatrix = 0x179ad60;
		constexpr auto LoadIdentity = 0x179ab00;
		constexpr auto LoadOrtho = 0x179ab30;
		constexpr auto LoadPixelMatrix = 0x179ab60;
		constexpr auto LoadProjectionMatrix = 0x179abd0;
		constexpr auto GetGPUProjectionMatrix = 0x179a960;
		constexpr auto GLLoadPixelMatrixScript = 0x179a880;
		constexpr auto GLIssuePluginEvent = 0x179a840;
		constexpr auto IssuePluginEvent = 0x179aa50;
		constexpr auto Begin = 0x179a5e0;
		constexpr auto End = 0x179a730;
		constexpr auto GLClear = 0x179a7d0;
		constexpr auto Clear = 0x179a670;
		constexpr auto ClearWithSkybox = 0x179a620;
		constexpr auto MultMatrix_Injected = 0x179ac10;
		constexpr auto LoadProjectionMatrix_Injected = 0x179ab90;
		constexpr auto GetGPUProjectionMatrix_Injected = 0x179a900;
		constexpr auto GLClear_Injected = 0x179a760;
	};

	namespace UnityEngine_Material {

		constexpr auto CreateWithShader = 0x17a8220;
		constexpr auto CreateWithMaterial = 0x17a81d0;
		constexpr auto CreateWithString = 0x17a8270;
		constexpr auto ctor = 0x17a97d0;
		constexpr auto get_shader = 0x17a9a90;
		constexpr auto set_shader = 0x17a9c20;
		constexpr auto get_color = 0x17a9860;
		constexpr auto set_color = 0x17a9ad0;
		constexpr auto get_mainTexture = 0x17a9970;
		constexpr auto GetFirstPropertyNameIdByAttribute = 0x17a8540;
		constexpr auto HasProperty = 0x17a8a50;
		constexpr auto get_renderQueue = 0x17a9a50;
		constexpr auto set_renderQueue = 0x17a9be0;
		constexpr auto EnableKeyword = 0x17a8300;
		constexpr auto DisableKeyword = 0x17a82b0;
		constexpr auto IsKeywordEnabled = 0x17a8a90;
		constexpr auto get_enableInstancing = 0x17a9930;
		constexpr auto set_enableInstancing = 0x17a9b90;
		constexpr auto get_passCount = 0x17a9a10;
		constexpr auto GetShaderPassEnabled = 0x17a8690;
		constexpr auto GetPassName = 0x17a8610;
		constexpr auto FindPass = 0x17a8350;
		constexpr auto SetOverrideTag = 0x17a9220;
		constexpr auto GetTagImpl = 0x17a86e0;
		constexpr auto GetTag = 0x17a87e0;
		constexpr auto SetPass = 0x17a9280;
		constexpr auto CopyPropertiesFromMaterial = 0x17a8180;
		constexpr auto GetShaderKeywords = 0x17a8650;
		constexpr auto SetShaderKeywords = 0x17a92c0;
		constexpr auto get_shaderKeywords = 0x17a8650;
		constexpr auto set_shaderKeywords = 0x17a92c0;
		constexpr auto SetFloatImpl = 0x17a8f70;
		constexpr auto SetColorImpl = 0x17a8be0;
		constexpr auto SetMatrixImpl = 0x17a90e0;
		constexpr auto SetTextureImpl = 0x17a9310;
		constexpr auto SetBufferImpl = 0x17a8ae0;
		constexpr auto GetFloatImpl = 0x17a8580;
		constexpr auto GetColorImpl = 0x17a83f0;
		constexpr auto GetTextureImpl = 0x17a8850;
		constexpr auto SetFloatArrayImpl = 0x17a8ce0;
		constexpr auto SetTextureOffsetImpl = 0x17a93b0;
		constexpr auto SetTextureScaleImpl = 0x17a94b0;
		constexpr auto SetFloatArray = 0x17a8e40;
		constexpr auto SetFloat = 0x17a8fc0;
		constexpr auto SetInt = 0x17a9020;
		constexpr auto SetColor = 0x17a8c80;
		constexpr auto SetVector = 0x17a95c0;
		constexpr auto SetMatrix = 0x17a91a0;
		constexpr auto SetTexture = 0x17a9560;
		constexpr auto SetBuffer = 0x17a8b30;
		constexpr auto GetFloat = 0x17a85c0;
		constexpr auto GetColor = 0x17a84c0;
		constexpr auto GetVector = 0x17a88e0;
		constexpr auto GetTexture = 0x17a8890;
		constexpr auto SetTextureOffset = 0x17a9400;
		constexpr auto SetTextureScale = 0x17a9500;
		constexpr auto SetColorImpl_Injected = 0x17a8b90;
		constexpr auto SetMatrixImpl_Injected = 0x17a9090;
		constexpr auto GetColorImpl_Injected = 0x17a83a0;
		constexpr auto SetTextureOffsetImpl_Injected = 0x17a9360;
		constexpr auto SetTextureScaleImpl_Injected = 0x17a9460;
	};

	namespace UnityEngine_Screen {

		constexpr auto get_width = 0x186b4c0;
		constexpr auto get_height = 0x186b460;
		constexpr auto get_dpi = 0x186b400;
		constexpr auto get_currentResolution = 0x186b3c0;
		constexpr auto get_fullScreen = 0x186b430;
		constexpr auto SetResolution = 0x186b2c0;
		constexpr auto get_resolutions = 0x186b490;
		constexpr auto get_currentResolution_Injected = 0x186b380;
	};

	namespace TOD_AtmosphereParameters {
		constexpr auto RayleighMultiplier = 0x10;
		constexpr auto MieMultiplier = 0x14;
		constexpr auto Brightness = 0x18;
		constexpr auto Contrast = 0x1c;
		constexpr auto Directionality = 0x20;
		constexpr auto Fogginess = 0x24;

		constexpr auto ctor = 0xc300f0;
	};

	namespace TOD_MoonParameters {
		constexpr auto MeshSize = 0x10;
		constexpr auto MeshBrightness = 0x14;
		constexpr auto MeshContrast = 0x18;
		constexpr auto HaloSize = 0x1c;
		constexpr auto HaloBrightness = 0x20;
		constexpr auto Position = 0x24;

		constexpr auto ctor = 0xc33eb0;
	};

	namespace TOD_CloudParameters {
		constexpr auto Size = 0x10;
		constexpr auto Opacity = 0x14;
		constexpr auto Coverage = 0x18;
		constexpr auto Sharpness = 0x1c;
		constexpr auto Coloring = 0x20;
		constexpr auto Attenuation = 0x24;
		constexpr auto Saturation = 0x28;
		constexpr auto Scattering = 0x2c;
		constexpr auto Brightness = 0x30;

		constexpr auto ctor = 0xc31580;
	};

	namespace TOD_NightParameters {
		constexpr auto MoonColor = 0x10;
		constexpr auto LightColor = 0x18;
		constexpr auto RayColor = 0x20;
		constexpr auto SkyColor = 0x28;
		constexpr auto CloudColor = 0x30;
		constexpr auto FogColor = 0x38;
		constexpr auto AmbientColor = 0x40;
		constexpr auto LightIntensity = 0x48;
		constexpr auto ShadowStrength = 0x4c;
		constexpr auto AmbientMultiplier = 0x50;
		constexpr auto ReflectionMultiplier = 0x54;

		constexpr auto ctor = 0xc33ef0;
	};

}
